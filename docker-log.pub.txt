
$ docker --version
Docker version 20.10.17, build 100c701


$ docker version
Client:
 Cloud integration: v1.0.28
 Version:           20.10.17
 API version:       1.41
 Go version:        go1.17.11
 Git commit:        100c701
 Built:             Mon Jun  6 23:09:02 2022
 OS/Arch:           windows/amd64
 Context:           default
 Experimental:      true

Server: Docker Desktop 4.11.1 (84025)
 Engine:
  Version:          20.10.17
  API version:      1.41 (minimum version 1.12)
  Go version:       go1.17.11
  Git commit:       a89b842
  Built:            Mon Jun  6 23:01:23 2022
  OS/Arch:          linux/amd64
  Experimental:     false
 containerd:
  Version:          1.6.6
  GitCommit:        10c12954828e7c7c9b6e0ea9b0c02b01407d3ae1
 runc:
  Version:          1.1.2
  GitCommit:        v1.1.2-0-ga916309
 docker-init:
  Version:          0.19.0
  GitCommit:        de40ad0


$ docker ps -a
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES

$ docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES

$ docker images
REPOSITORY    TAG       IMAGE ID       CREATED         SIZE
hello-world   latest    feb5d9fea6a5   11 months ago   13.3kB

$ docker run hello-world
Unable to find image 'hello-world:latest' locally
latest: Pulling from library/hello-world
2db29710123e: Pulling fs layer
2db29710123e: Verifying Checksum
2db29710123e: Download complete
2db29710123e: Pull complete
...

$ docker rm 2ccfb87c55b3
2ccfb87c55b3

$ docker run busybox
Unable to find image 'busybox:latest' locally
latest: Pulling from library/busybox
50783e0dfb64: Pulling fs layer
50783e0dfb64: Verifying Checksum
50783e0dfb64: Download complete
50783e0dfb64: Pull complete
Digest: sha256:ef320ff10026a50cf5f0213d35537ce0041ac1d96e9b7800bafd8bc9eff6c693
Status: Downloaded newer image for busybox:latest

$ docker ps -a
CONTAINER ID   IMAGE         COMMAND    CREATED              STATUS                          PORTS     NAMES
172e39daff9c   busybox       "sh"       About a minute ago   Exited (0) About a minute ago             intelligent_carson
55ba15a1fa44   hello-world   "/hello"   About a minute ago   Exited (0) About a minute ago             modest_colden

docker run -it busybox

/ # hostname
f96c88d51caa

/ # hostname -i
172.17.0.2

/ # ping 8.8.8.8
PING 8.8.8.8 (8.8.8.8): 56 data bytes
64 bytes from 8.8.8.8: seq=0 ttl=37 time=80.422 ms
64 bytes from 8.8.8.8: seq=2 ttl=37 time=131.267 ms
64 bytes from 8.8.8.8: seq=2 ttl=37 time=131.371 ms (DUP!)
64 bytes from 8.8.8.8: seq=3 ttl=37 time=113.538 ms
^C
--- 8.8.8.8 ping statistics ---
4 packets transmitted, 3 packets received, 1 duplicates, 25% packet loss
round-trip min/avg/max = 80.422/114.149/131.371 ms

/ # ping google.com
PING google.com (173.194.221.139): 56 data bytes
64 bytes from 173.194.221.139: seq=0 ttl=37 time=136.077 ms
64 bytes from 173.194.221.139: seq=1 ttl=37 time=119.767 ms
64 bytes from 173.194.221.139: seq=1 ttl=37 time=119.817 ms (DUP!)
64 bytes from 173.194.221.139: seq=2 ttl=37 time=94.084 ms
64 bytes from 173.194.221.139: seq=3 ttl=37 time=106.791 ms
64 bytes from 173.194.221.139: seq=4 ttl=37 time=124.786 ms
^C
--- google.com ping statistics ---
5 packets transmitted, 5 packets received, 1 duplicates, 0% packet loss
round-trip min/avg/max = 94.084/116.887/136.077 ms

docker container prune
WARNING! This will remove all stopped containers.
Are you sure you want to continue? [y/N] y
Deleted Containers:
f96c88d51caac469f6b134f719846206bf417111066ca510249322845865feab
b813ab5d80b69170312fc1ecc00d0fe5d49f048540201dc25d0f88ff73130a57
172e39daff9cb5abc0dfdd880117637a7dc80638a65fa14145752fc430ea8580
55ba15a1fa44a77b3aab3d38bdb1d565796c00c9977f624de386c5a223c31c00

Total reclaimed space: 73B


$ docker run nginx
Unable to find image 'nginx:latest' locally
latest: Pulling from library/nginx
7a6db449b51b: Pulling fs layer
ca1981974b58: Pulling fs layer
d4019c921e20: Pulling fs layer
7cb804d746d4: Pulling fs layer
e7a561826262: Pulling fs layer
7247f6e5c182: Pulling fs layer
7cb804d746d4: Waiting
e7a561826262: Waiting
7247f6e5c182: Waiting
d4019c921e20: Verifying Checksum
d4019c921e20: Download complete
7cb804d746d4: Verifying Checksum
7cb804d746d4: Download complete
e7a561826262: Verifying Checksum
e7a561826262: Download complete
7247f6e5c182: Verifying Checksum
7247f6e5c182: Download complete
ca1981974b58: Download complete
7a6db449b51b: Verifying Checksum
7a6db449b51b: Download complete
7a6db449b51b: Pull complete
ca1981974b58: Pull complete
d4019c921e20: Pull complete
7cb804d746d4: Pull complete
e7a561826262: Pull complete
7247f6e5c182: Pull complete
Digest: sha256:b95a99feebf7797479e0c5eb5ec0bdfa5d9f504bc94da550c2f58e839ea6914f
Status: Downloaded newer image for nginx:latest
/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
/docker-entrypoint.sh: Configuration complete; ready for start up
2022/08/27 20:17:47 [notice] 1#1: using the "epoll" event method
2022/08/27 20:17:47 [notice] 1#1: nginx/1.23.1
2022/08/27 20:17:47 [notice] 1#1: built by gcc 10.2.1 20210110 (Debian 10.2.1-6)
2022/08/27 20:17:47 [notice] 1#1: OS: Linux 5.10.16.3-microsoft-standard-WSL2
2022/08/27 20:17:47 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
2022/08/27 20:17:47 [notice] 1#1: start worker processes
2022/08/27 20:17:47 [notice] 1#1: start worker process 31
2022/08/27 20:17:47 [notice] 1#1: start worker process 32
2022/08/27 20:17:47 [notice] 1#1: start worker process 33
2022/08/27 20:17:47 [notice] 1#1: start worker process 34

docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED              STATUS          PORTS     NAMES
0a5609034041   nginx     "/docker-entrypoint.…"   About a minute ago   Up 58 seconds   80/tcp    stoic_shamir

docker stop 0a5609034041
0a5609034041

! docker kill 0a5609034041



docker run -d nginx
cc71ef8749a704788a29183604d8bf6416e39e7e85672edd8a7dfdf64270fa8e

docker container inspect cc71ef8749a7
[
    {
        "Id": "cc71ef8749a704788a29183604d8bf6416e39e7e85672edd8a7dfdf64270fa8e",
        "Created": "2022-08-27T20:23:42.782667Z",
        "Path": "/docker-entrypoint.sh",
        "Args": [
            "nginx",
            "-g",
            "daemon off;"
        ],
        "State": {
            "Status": "running",
            "Running": true,
            "Paused": false,
            "Restarting": false,
            "OOMKilled": false,
            "Dead": false,
            "Pid": 1985,
            "ExitCode": 0,
            "Error": "",
            "StartedAt": "2022-08-27T20:23:43.3168914Z",
            "FinishedAt": "0001-01-01T00:00:00Z"
...

$ docker container inspect cc71ef8749a7 | grep IPAddress

            "SecondaryIPAddresses": null,
            "IPAddress": "172.17.0.2",
                    "IPAddress": "172.17.0.2",


docker exec -it f86f64411bd4c6a8ed99c0a76c5828459caa8fa0fd89625a4ec0eeea3024693 bash
root@f86f64411bd4:/#

root@f86f64411bd4:/# hostname
f86f64411bd4

root@f86f64411bd4:/# hostname -i
172.17.0.3

root@f86f64411bd4:/# cd /usr/share/nginx/html
root@f86f64411bd4:/usr/share/nginx/html# ls -la
total 16
drwxr-xr-x 2 root root 4096 Aug 23 03:58 .
drwxr-xr-x 3 root root 4096 Aug 23 03:58 ..
-rw-r--r-- 1 root root  497 Jul 19 14:05 50x.html
-rw-r--r-- 1 root root  615 Jul 19 14:05 index.html

root@f86f64411bd4:/usr/share/nginx/html# cat index.html
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
html { color-scheme: light dark; }
body { width: 35em; margin: 0 auto;
font-family: Tahoma, Verdana, Arial, sans-serif; }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>


PS C:\Users\user> docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS     NAMES
f86f64411bd4   nginx     "/docker-entrypoint.…"   5 minutes ago    Up 5 minutes    80/tcp    dreamy_bhabha
cc71ef8749a7   nginx     "/docker-entrypoint.…"   10 minutes ago   Up 10 minutes   80/tcp    mystifying_euler
PS C:\Users\user> docker stop f86f64411bd4
f86f64411bd4
PS C:\Users\user> docker stop cc71ef8749a7
cc71ef8749a7
PS C:\Users\user> docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES


PS C:\Users\user> docker run -d --name my_nginx nginx
e8f8d3d7647a1931f9d95ab9372ecc9867399d964984c4616b816c2d74ea78b2

PS C:\Users\user> docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS     NAMES
e8f8d3d7647a   nginx     "/docker-entrypoint.…"   43 seconds ago   Up 42 seconds   80/tcp    my_nginx

PS C:\Users\user> docker stop my_nginx
my_nginx

PS C:\Users\user> docker container prune
WARNING! This will remove all stopped containers.
Are you sure you want to continue? [y/N] y
Deleted Containers:
e8f8d3d7647a1931f9d95ab9372ecc9867399d964984c4616b816c2d74ea78b2
f86f64411bd4c6a8ed99c0a76c5828459caa8fa0fd89625a4ec0eeea30246938
cc71ef8749a704788a29183604d8bf6416e39e7e85672edd8a7dfdf64270fa8e
0a560903404138655a840b0eb73bf8a08d651ee243724c8cb29c282b6ebb4373

Total reclaimed space: 4.465kB

PS C:\Users\user> docker run -d -p 8080:80 nginx
8e7257b0ee8e28a6790d9371ba23a47a11fda0eb42da9a7572ae03d8b31e84d2
PS C:\Users\user> docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                  NAMES
8e7257b0ee8e   nginx     "/docker-entrypoint.…"   13 seconds ago   Up 12 seconds   0.0.0.0:8080->80/tcp   tender_blackburn


http://localhost:8080/


PS C:\Users\user> docker run -d -p 8081:80 nginx
4728040a08e486a22338a71f2c0ec1ac948843bad57591e6222b4cb9d69ad436
PS C:\Users\user> docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                  NAMES
4728040a08e4   nginx     "/docker-entrypoint.…"   34 seconds ago   Up 32 seconds   0.0.0.0:8081->80/tcp   happy_blackburn
8e7257b0ee8e   nginx     "/docker-entrypoint.…"   2 minutes ago    Up 2 minutes    0.0.0.0:8080->80/tcp   tender_blackburn


PS C:\Users\user> docker stop 4728040a08e4 8e7257b0ee8e
4728040a08e4
8e7257b0ee8e

PS C:\Users\user> echo ${PWD}

Path
----
C:\Users\user

PS C:\Users\user> cd /
PS C:\> echo ${PWD}

Path
----
C:\


Терминал в VS Studio Code : Ctrl+`

PS C:\Users\user> cd C:\work\docker\stashchuk\
PS C:\work\docker\stashchuk> 



PS C:\work\docker\stashchuk\nginx> echo ${PWD}

Path
----
C:\work\docker\stashchuk\nginx

PS C:\work\docker\stashchuk\nginx> docker run -v ${PWD}:/usr/share/nginx/html -p 8080:80 -d nginx
51c8d79d09312284bc64a496bc764bdc60dc154e2aabe38bf4d413af5d805056

PS C:\work\docker\stashchuk\nginx> docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED              STATUS              PORTS                  NAMES
51c8d79d0931   nginx     "/docker-entrypoint.…"   About a minute ago   Up About a minute   0.0.0.0:8080->80/tcp   priceless_khorana
PS C:\work\docker\stashchuk\nginx>


PS C:\work\docker\stashchuk\nginx> docker exec -it 51c8d79d0931 bash
root@51c8d79d0931:/# cd /usr/share/nginx/html
root@51c8d79d0931:/usr/share/nginx/html# ls -la
total 4
drwxrwxrwx 1 root root  512 Aug 27 20:54 .
drwxr-xr-x 3 root root 4096 Aug 23 03:58 ..
-rwxrwxrwx 1 root root  323 Aug 27 20:56 index.html

root@51c8d79d0931:/usr/share/nginx/html# cat index.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Меппинг томов</title>
</head>
<body>
    <h1>Привет от NGINX</h1>
</body>


PS C:\work\docker\stashchuk\nginx> docker run -v C:\work\docker\stashchuk\nginx:/usr/share/nginx/html -p 8081:80 -d nginx
32eab7996e11822112ac9d098d89c193254806a7dbfe13f06e0449e80c9c7137

PS C:\work\docker\stashchuk\nginx> docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                  NAMES
32eab7996e11   nginx     "/docker-entrypoint.…"   45 seconds ago   Up 44 seconds   0.0.0.0:8081->80/tcp   beautiful_mendeleev
51c8d79d0931   nginx     "/docker-entrypoint.…"   6 minutes ago    Up 6 minutes    0.0.0.0:8080->80/tcp   priceless_khorana

PS C:\work\docker\stashchuk\nginx> docker stop 32eab7996e11 51c8d79d0931
32eab7996e11
51c8d79d0931

PS C:\work\docker\stashchuk\nginx> docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES

PS C:\work\docker\stashchuk\nginx> docker ps -a
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS                      PORTS     NAMES
32eab7996e11   nginx     "/docker-entrypoint.…"   2 minutes ago    Exited (0) 25 seconds ago             beautiful_mendeleev
51c8d79d0931   nginx     "/docker-entrypoint.…"   8 minutes ago    Exited (0) 25 seconds ago             priceless_khorana
4728040a08e4   nginx     "/docker-entrypoint.…"   25 minutes ago   Exited (0) 22 minutes ago             happy_blackburn
8e7257b0ee8e   nginx     "/docker-entrypoint.…"   27 minutes ago   Exited (0) 22 minutes ago             tender_blackburn

PS C:\work\docker\stashchuk\nginx> docker container prune       
WARNING! This will remove all stopped containers.
Are you sure you want to continue? [y/N] y
Deleted Containers:
32eab7996e11822112ac9d098d89c193254806a7dbfe13f06e0449e80c9c7137
51c8d79d09312284bc64a496bc764bdc60dc154e2aabe38bf4d413af5d805056
4728040a08e486a22338a71f2c0ec1ac948843bad57591e6222b4cb9d69ad436
8e7257b0ee8e28a6790d9371ba23a47a11fda0eb42da9a7572ae03d8b31e84d2

Total reclaimed space: 4.436kB


PS C:\work\docker\stashchuk\nginx> docker run -it --rm busybox
/ #
/ # ls
bin   dev   etc   home  proc  root  sys   tmp   usr   var
/ # exit
PS C:\work\docker\stashchuk\nginx> docker ps -a
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES


docker run \
--name my_nginx \
-v ${PWD}:/usr/share/nginx/html \
-p 8080:80 \
-d \
--rm \
nginx

================================================================

PS C:\work\docker\stashchuk> docker images
error during connect: This error may indicate that the docker daemon is not running.: Get "http://%2F%2F.%2Fpipe%2Fdocker_engine/v1.24/images/json": open //./pipe/docker_engine: The system cannot find the file specified.
PS C:\work\docker\stashchuk> docker version
error during connect: This error may indicate that the docker daemon is not running.: Get "http://%2F%2F.%2Fpipe%2Fdocker_engine/v1.24/version": open //./pipe/docker_engine: The system cannot find the file specified.
Client:
 Cloud integration: v1.0.28
 Version:           20.10.17
 API version:       1.41
 Go version:        go1.17.11
 Git commit:        100c701
 Built:             Mon Jun  6 23:09:02 2022
 OS/Arch:           windows/amd64
 Context:           default
 Experimental:      true


PS C:\work\docker\stashchuk> docker images 
REPOSITORY    TAG       IMAGE ID       CREATED         SIZE
nginx         latest    2b7d6430f78d   5 days ago      142MB
busybox       latest    7a80323521cc   4 weeks ago     1.24MB
hello-world   latest    feb5d9fea6a5   11 months ago   13.3kB

PS C:\work\docker\stashchuk> cd ../python-app
cd : Не удается найти путь "C:\work\docker\python-app", так как он не существует.
строка:1 знак:1
+ cd ../python-app
+ ~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (C:\work\docker\python-app:String) [Set-Location], ItemNotFoundException
    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.SetLocationCommand
 
PS C:\work\docker\stashchuk> cd .\python-app\
PS C:\work\docker\stashchuk\python-app> 

PS C:\work\docker\stashchuk\python-app> ls


    Каталог: C:\work\docker\stashchuk\python-app


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
-a----        28.08.2022     10:29             78 Dockerfile
-a----        28.08.2022     10:30            307 main.py

PS C:\work\docker\stashchuk\python-app> docker build . -t my-calendar
[+] Building 16.1s (8/8) FINISHED
 => [internal] load build definition from Dockerfile                                                                            0.1s 
 => => transferring dockerfile: 115B                                                                                            0.0s 
 => [internal] load .dockerignore                                                                                               0.1s 
 => => transferring context: 2B                                                                                                 0.0s 
 => [internal] load metadata for docker.io/library/python:alpine                                                                4.5s 
 => [internal] load build context                                                                                               0.1s 
 => => transferring context: 460B                                                                                               0.0s 
 => [1/3] FROM docker.io/library/python:alpine@sha256:0c46c7f15ee201a2e2dc3579dbc302f989a20b1283e67f884941e071372eb2cc         10.0s 
 => => resolve docker.io/library/python:alpine@sha256:0c46c7f15ee201a2e2dc3579dbc302f989a20b1283e67f884941e071372eb2cc          0.1s 
 => => sha256:0c46c7f15ee201a2e2dc3579dbc302f989a20b1283e67f884941e071372eb2cc 1.65kB / 1.65kB                                  0.0s 
 => => sha256:5b4e425e03038da758a35dc6f4473b4cf9bbadb9a7cdc2766d5d1d10ef1c9ca9 1.37kB / 1.37kB                                  0.0s 
 => => sha256:ce4168535f3061a90d9588745074d3944690aaf1b882123d44e74be6e87eae7f 7.03kB / 7.03kB                                  0.0s 
 => => sha256:213ec9aee27d8be045c6a92b7eac22c9a64b44558193775a1a7f626352392b49 2.81MB / 2.81MB                                  2.4s 
 => => sha256:6b2a141cd2277284ebaafc76d13b42cf8a7682e4663298a2a730f18331a95eb6 681.40kB / 681.40kB                              1.4s 
 => => sha256:a292fad6b52eab6b925b41e777019dceed76ce6965db16c78528bcc05f32691a 12.51MB / 12.51MB                                7.8s 
 => => sha256:4593e4e33a591c85925982423bc77b03d1a8890b4d36780365243fe6e35db60e 231B / 231B                                      1.8s 
 => => sha256:9fc487f386544a636bd7edc089e9591a048401d4bd3011b10eef42b4393771e9 3.04MB / 3.04MB                                  4.8s 
 => => extracting sha256:213ec9aee27d8be045c6a92b7eac22c9a64b44558193775a1a7f626352392b49                                       0.3s 
 => => extracting sha256:6b2a141cd2277284ebaafc76d13b42cf8a7682e4663298a2a730f18331a95eb6                                       0.3s 
 => => extracting sha256:a292fad6b52eab6b925b41e777019dceed76ce6965db16c78528bcc05f32691a                                       0.8s 
 => => extracting sha256:4593e4e33a591c85925982423bc77b03d1a8890b4d36780365243fe6e35db60e                                       0.0s 
 => => extracting sha256:9fc487f386544a636bd7edc089e9591a048401d4bd3011b10eef42b4393771e9                                       0.4s 
 => [2/3] WORKDIR /appp                                                                                                         0.9s 
 => [3/3] COPY . .                                                                                                              0.1s 
 => exporting to image                                                                                                          0.2s
 => => exporting layers                                                                                                         0.1s 
 => => writing image sha256:7bf2d11beeb48d0bcbc715a6d0336259b8a5587eae9522235ea988c045b0bef0                                    0.0s 
 => => naming to docker.io/library/my-calendar                                                                                  0.0s 

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
PS C:\work\docker\stashchuk\python-app> 


PS C:\work\docker\stashchuk\python-app> docker images
REPOSITORY    TAG       IMAGE ID       CREATED              SIZE
my-calendar   latest    7bf2d11beeb4   About a minute ago   48.7MB
nginx         latest    2b7d6430f78d   5 days ago           142MB
busybox       latest    7a80323521cc   4 weeks ago          1.24MB
hello-world   latest    feb5d9fea6a5   11 months ago        13.3kB


PS C:\work\docker\stashchuk\python-app> docker run -it my-calendar
Добро пожаловать в календарь

Пожалуйста введите год: 2050
Введите номер любого месяца: 5
      May 2050
Mo Tu We Th Fr Sa Su
                   1
 2  3  4  5  6  7  8
 9 10 11 12 13 14 15
16 17 18 19 20 21 22
23 24 25 26 27 28 29
30 31

Всего хорошего

PS C:\work\docker\stashchuk\python-app> docker ps -a
CONTAINER ID   IMAGE         COMMAND            CREATED          STATUS                      PORTS     NAMES
bcd789543d50   my-calendar   "python main.py"   51 seconds ago   Exited (0) 33 seconds ago             sweet_jemison

PS C:\work\docker\stashchuk\python-app> docker run -it my-calendar
Добро пожаловать в календарь

Пожалуйста введите год: 2055
Введите номер любого месяца: 1
    January 2055
Mo Tu We Th Fr Sa Su
             1  2  3
 4  5  6  7  8  9 10
11 12 13 14 15 16 17
18 19 20 21 22 23 24
25 26 27 28 29 30 31

Всего хорошего


Делаем новую версию образа (изменили файл main.py)

PS C:\work\docker\stashchuk\python-app> docker build . -t my-calendar:2.0.0
[+] Building 4.4s (8/8) FINISHED
 => [internal] load build definition from Dockerfile                                                                            0.1s 
 => => transferring dockerfile: 31B                                                                                             0.0s 
 => [internal] load .dockerignore                                                                                               0.1s 
 => => transferring context: 2B                                                                                                 0.0s 
 => [internal] load metadata for docker.io/library/python:alpine                                                                3.7s 
 => [1/3] FROM docker.io/library/python:alpine@sha256:0c46c7f15ee201a2e2dc3579dbc302f989a20b1283e67f884941e071372eb2cc          0.0s 
 => [internal] load build context                                                                                               0.0s 
 => => transferring context: 387B                                                                                               0.0s 
 => CACHED [2/3] WORKDIR /appp                                                                                                  0.0s 
 => [3/3] COPY . .                                                                                                              0.1s 
 => exporting to image                                                                                                          0.2s 
 => => exporting layers                                                                                                         0.1s 
 => => writing image sha256:18bdfbad597ad8db64e0db0343b48e406b31c328ee1295935f1bc2a2957ad1c0                                    0.0s 
 => => naming to docker.io/library/my-calendar:2.0.0                                                                            0.0s 

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them


Теперь две версии my-calendar

PS C:\work\docker\stashchuk\python-app> docker images
REPOSITORY    TAG       IMAGE ID       CREATED              SIZE
my-calendar   2.0.0     18bdfbad597a   About a minute ago   48.7MB
my-calendar   latest    7bf2d11beeb4   7 minutes ago        48.7MB
nginx         latest    2b7d6430f78d   5 days ago           142MB
busybox       latest    7a80323521cc   4 weeks ago          1.24MB
hello-world   latest    feb5d9fea6a5   11 months ago        13.3kB


Запускаем новую версию образа


PS C:\work\docker\stashchuk\python-app> docker run -it my-calendar:2.0.0   
Добро пожаловать в супер календарь

Пожалуйста введите год: 2022
Введите номер любого месяца: 1
    January 2022
Mo Tu We Th Fr Sa Su
                1  2
 3  4  5  6  7  8  9
10 11 12 13 14 15 16
17 18 19 20 21 22 23
24 25 26 27 28 29 30
31

Всего хорошего

PS C:\work\docker\stashchuk\python-app> docker run -it my-calendar
Добро пожаловать в календарь

Пожалуйста введите год:

Переходим в новый терминал

PS C:\work\docker\stashchuk> docker ps
CONTAINER ID   IMAGE         COMMAND            CREATED          STATUS          PORTS     NAMES
96a0462c850c   my-calendar   "python main.py"   32 seconds ago   Up 31 seconds             frosty_ride
PS C:\work\docker\stashchuk> docker exec -it 96a0462c850c sh



PS C:\work\docker\stashchuk\python-app> cd ..\node-app\
PS C:\work\docker\stashchuk\node-app> ls


    Каталог: C:\work\docker\stashchuk\node-app


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
-a----        28.08.2022     10:55             74 Docker
-a----        28.08.2022     10:54            170 index.mjs



Создали новый каталог \node-app, новые файлы Docker и index.mjs

PS C:\work\docker\stashchuk\node-app> docker build . -t my-file-writer   
[+] Building 0.1s (2/2) FINISHED
 => [internal] load build definition from Dockerfile                                                                            0.1s 
 => => transferring dockerfile: 2B                                                                                              0.0s 
 => [internal] load .dockerignore                                                                                               0.1s 
 => => transferring context: 2B                                                                                                 0.0s 
failed to solve with frontend dockerfile.v0: failed to read dockerfile: open /var/lib/docker/tmp/buildkit-mount224169510/Dockerfile: 
no such file or directory


Создаём образ


PS C:\work\docker\stashchuk\node-app> docker build . -t my-file-writer
[+] Building 44.2s (8/8) FINISHED
 => [internal] load build definition from Dockerfile                                                                                     0.1s 
 => => transferring dockerfile: 111B                                                                                                     0.0s 
 => [internal] load .dockerignore                                                                                                        0.1s 
 => => transferring context: 2B                                                                                                          0.0s 
 => [internal] load metadata for docker.io/library/node:alpine                                                                           3.1s 
 => [internal] load build context                                                                                                        0.1s 
 => => transferring context: 321B                                                                                                        0.0s 
 => [1/3] FROM docker.io/library/node:alpine@sha256:9b435939937b0deef5c1f6fcfd1f265aa7a77574388b671fda322e662744472d                    38.7s 
 => => resolve docker.io/library/node:alpine@sha256:9b435939937b0deef5c1f6fcfd1f265aa7a77574388b671fda322e662744472d                     0.0s 
 => => sha256:9b435939937b0deef5c1f6fcfd1f265aa7a77574388b671fda322e662744472d 1.43kB / 1.43kB                                           0.0s 
 => => sha256:f08168de449131d96a16a9c042f96dc3169678907f120eee8d5ecc10ca75bb48 1.16kB / 1.16kB                                           0.0s 
 => => sha256:5e67b17105720d0c38599a616adcb3f6c66c4bb247a7180032c78e93297e8ea0 6.67kB / 6.67kB                                           0.0s
 => => sha256:f65aa18165db91da3885baecdb9fd97003870a596214eae012cdad32939d951a 46.26MB / 46.26MB                                        34.0s 
 => => sha256:028cf1f44ab1e1d832e34c329dfcc22800645542ab3bbbad9e7e126b411ce1f9 2.35MB / 2.35MB                                           3.3s 
 => => sha256:fd0328f6bdba7ec736a2c2f798e514297eefffd6653608e0d461799751c59837 449B / 449B                                               1.7s 
 => => extracting sha256:f65aa18165db91da3885baecdb9fd97003870a596214eae012cdad32939d951a                                                3.6s 
 => => extracting sha256:028cf1f44ab1e1d832e34c329dfcc22800645542ab3bbbad9e7e126b411ce1f9                                                0.2s
 => => extracting sha256:fd0328f6bdba7ec736a2c2f798e514297eefffd6653608e0d461799751c59837                                                0.0s 
 => [2/3] WORKDIR /app                                                                                                                   1.7s 
 => [3/3] COPY . .                                                                                                                       0.2s 
 => exporting to image                                                                                                                   0.2s 
 => => exporting layers                                                                                                                  0.2s 
 => => writing image sha256:9f04cd07d8351766fb53cb55ce681c96772d15dd30bb1a46894c20c0e09738fc                                             0.0s 
 => => naming to docker.io/library/my-file-writer                                                                                        0.0s 

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them


PS C:\work\docker\stashchuk\node-app> docker images
REPOSITORY       TAG       IMAGE ID       CREATED              SIZE
my-file-writer   latest    9f04cd07d835   About a minute ago   167MB
my-calendar      2.0.0     18bdfbad597a   25 minutes ago       48.7MB
my-calendar      latest    7bf2d11beeb4   30 minutes ago       48.7MB
nginx            latest    2b7d6430f78d   5 days ago           142MB
busybox          latest    7a80323521cc   4 weeks ago          1.24MB
hello-world      latest    feb5d9fea6a5   11 months ago        13.3kB



PS C:\work\docker\stashchuk\node-app> docker run -it my-file-writer
node:internal/modules/cjs/loader:958
  throw err;
  ^

Error: Cannot find module '/app/inde.mjs'
    at Module._resolveFilename (node:internal/modules/cjs/loader:955:15)
    at Module._load (node:internal/modules/cjs/loader:803:27)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)
    at node:internal/main/run_main_module:18:47 {
  code: 'MODULE_NOT_FOUND',
  requireStack: []
}

Node.js v18.8.0

В Dockerfile ошибка, вместо "index.mjs" написано "inde.mjs". Исправляем ошибку CMD [ "node", "index.mjs" ]

Ещё раз билдим образ с тем же тегом


PS C:\work\docker\stashchuk\node-app> docker build . -t my-file-writer
[+] Building 5.3s (8/8) FINISHED
 => [internal] load build definition from Dockerfile                                                                                     0.1s 
 => => transferring dockerfile: 112B                                                                                                     0.0s 
 => [internal] load .dockerignore                                                                                                        0.1s 
 => => transferring context: 2B                                                                                                          0.0s 
 => [internal] load metadata for docker.io/library/node:alpine                                                                           4.7s 
 => [1/3] FROM docker.io/library/node:alpine@sha256:9b435939937b0deef5c1f6fcfd1f265aa7a77574388b671fda322e662744472d                     0.0s 
 => [internal] load build context                                                                                                        0.1s 
 => => transferring context: 141B                                                                                                        0.0s 
 => CACHED [2/3] WORKDIR /app                                                                                                            0.0s 
 => [3/3] COPY . .                                                                                                                       0.1s 
 => exporting to image                                                                                                                   0.1s 
 => => exporting layers                                                                                                                  0.1s 
 => => writing image sha256:b7c21e5ae4727f66fd19c66b62bece2638b1797324eafe6f53464a57850b352a                                             0.0s 
 => => naming to docker.io/library/my-file-writer                                                                                        0.0s 

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them



PS C:\work\docker\stashchuk\node-app> docker images
REPOSITORY       TAG       IMAGE ID       CREATED          SIZE
my-file-writer   latest    b7c21e5ae472   35 seconds ago   167MB
<none>           <none>    9f04cd07d835   5 minutes ago    167MB
my-calendar      2.0.0     18bdfbad597a   29 minutes ago   48.7MB
my-calendar      latest    7bf2d11beeb4   35 minutes ago   48.7MB
nginx            latest    2b7d6430f78d   5 days ago       142MB
busybox          latest    7a80323521cc   4 weeks ago      1.24MB
hello-world      latest    feb5d9fea6a5   11 months ago    13.3kB


Теперь есть репозиторий без имени и без тега. Это прошлая версия.

Запускаем новый образ, всё работает

PS C:\work\docker\stashchuk\node-app> docker run -it my-file-writer   
Файл сохранен!


Теперь хотим посмотреть содержимое сохраненного файла.

PS C:\work\docker\stashchuk\node-app> docker ps -a
CONTAINER ID   IMAGE               COMMAND                  CREATED              STATUS                          PORTS     NAMES
56aa30af4179   my-file-writer      "docker-entrypoint.s…"   About a minute ago   Exited (0) About a minute ago             strange_tesla      
97a7d0ca5cf8   9f04cd07d835        "docker-entrypoint.s…"   5 minutes ago        Exited (1) 5 minutes ago                  competent_mayer    
96a0462c850c   my-calendar         "python main.py"         25 minutes ago       Exited (0) 22 minutes ago                 frosty_ride        
cc5a5d0ca11d   my-calendar:2.0.0   "python main.py"         28 minutes ago       Exited (0) 28 minutes ago                 youthful_bouman    
b43d806ff1aa   my-calendar         "python main.py"         32 minutes ago       Exited (0) 32 minutes ago                 competent_jang     
bcd789543d50   my-calendar         "python main.py"         34 minutes ago       Exited (0) 33 minutes ago                 sweet_jemison   


Этот файл в остановленном контейнере my-file-writer с id 56aa30af4179.


PS C:\work\docker\stashchuk\node-app> docker exec -it 56aa30af4179 sh
Error response from daemon: Container 56aa30af417926da8a689a9950da6dbb934805d1f44da8f199dfeb6c91ae0cdc is not running

Добавили задержку в файл index.njs чтобы контейнер сразу не закрывался, делаем новый образ.


PS C:\work\docker\stashchuk\node-app> docker build . -t my-file-writer
[+] Building 2.6s (8/8) FINISHED
 => [internal] load build definition from Dockerfile                                                                                     0.1s 
 => => transferring dockerfile: 31B                                                                                                      0.0s 
 => [internal] load .dockerignore                                                                                                        0.1s 
 => => transferring context: 2B                                                                                                          0.0s 
 => [internal] load metadata for docker.io/library/node:alpine                                                                           2.0s 
 => [internal] load build context                                                                                                        0.1s 
 => => transferring context: 295B                                                                                                        0.0s 
 => [1/3] FROM docker.io/library/node:alpine@sha256:9b435939937b0deef5c1f6fcfd1f265aa7a77574388b671fda322e662744472d                     0.0s 
 => CACHED [2/3] WORKDIR /app                                                                                                            0.0s 
 => [3/3] COPY . .                                                                                                                       0.1s 
 => exporting to image                                                                                                                   0.2s 
 => => exporting layers                                                                                                                  0.1s
 => => writing image sha256:99972910552b9ae10b6fae5b03ee1522035e3b9f23295e3538d72518d793efe2                                             0.0s 
 => => naming to docker.io/library/my-file-writer                                                                                        0.0s 

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them

Готовим команду для быстрого входа в контейнер

docker exec -it my-node-app sh


Запускаем образ

PS C:\work\docker\stashchuk\node-app> docker run -it --name my-node-app my-file-writer
Файл сохранен!
Конец
PS C:\work\docker\stashchuk\node-app>

В другом терминале смотрим содержимое файла my-file.txt

PS C:\work\docker\stashchuk> docker exec -it my-node-app sh
/app # ls 
Dockerfile   index.mjs    my-file.txt
/app # cat my-file.txt
Файл создан Node.js/app # 



PS C:\work\docker\stashchuk\node-app> cd ..
PS C:\work\docker\stashchuk> cd .\docker-compose-app\

PS C:\work\docker\stashchuk\docker-compose-app> ls


    Каталог: C:\work\docker\stashchuk\docker-compose-app


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
d-----        28.08.2022     11:33                app
-a----        28.08.2022     11:43             81 docker-compose.yml


PS C:\work\docker\stashchuk\docker-compose-app> docker-compose up
Pulling mongo (mongo:)...
latest: Pulling from library/mongo
3b65ec22a9e9: Pull complete
016bc871e2b3: Pull complete
9ddd649edd82: Pull complete
39bf776c01e4: Pull complete
f7f0405a2fe3: Pull complete
89785d0d9c65: Pull complete
fd40d84c80b0: Pull complete
d50d65ac4752: Pull complete
255e24cbd370: Pull complete
Digest: sha256:3f5930850894e023a36a670412445991dbe814c6fc356155ba933137c37e9a42
Status: Downloaded newer image for mongo:latest
Creating docker-compose-app_mongo_1 ... done
Creating docker-compose-app_app_1   ... done
Attaching to docker-compose-app_mongo_1, docker-compose-app_app_1
mongo_1  | {"t":{"$date":"2022-08-28T07:51:10.756+00:00"},"s":"I",  "c":"CONTROL",  "id":23285,   "ctx":"thread1","msg":"Automatically disabling TLS 1.0, to force-enable TLS 1.0 specify --sslDisabledProtocols 'none'"}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:10.759+00:00"},"s":"I",  "c":"NETWORK",  "id":4915701, "ctx":"thread1","msg":"Initialized wire specification","attr":{"spec":{"incomingExternalClient":{"minWireVersion":0,"maxWireVersion":17},"incomingInternalClient":{"minWireVersion":0,"maxWireVersion":17},"outgoing":{"minWireVersion":6,"maxWireVersion":17},"isInternalClient":true}}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:10.762+00:00"},"s":"I",  "c":"NETWORK",  "id":4648601, "ctx":"thread1","msg":"Implicit TCP FastOpen unavailable. If TCP FastOpen is required, set tcpFastOpenServer, tcpFastOpenClient, and tcpFastOpenQueueSize."}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:10.764+00:00"},"s":"I",  "c":"REPL",     "id":5123008, "ctx":"thread1","msg":"Successfully registered PrimaryOnlyService","attr":{"service":"TenantMigrationDonorService","namespace":"config.tenantMigrationDonors"}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:10.764+00:00"},"s":"I",  "c":"REPL",     "id":5123008, "ctx":"thread1","msg":"Successfully registered PrimaryOnlyService","attr":{"service":"TenantMigrationRecipientService","namespace":"config.tenantMigrationRecipients"}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:10.764+00:00"},"s":"I",  "c":"REPL",     "id":5123008, "ctx":"thread1","msg":"Successfully registered PrimaryOnlyService","attr":{"service":"ShardSplitDonorService","namespace":"config.tenantSplitDonors"}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:10.764+00:00"},"s":"I",  "c":"CONTROL",  "id":5945603, "ctx":"thread1","msg":"Multi threading initialized"}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:10.764+00:00"},"s":"I",  "c":"CONTROL",  "id":4615611, "ctx":"initandlisten","msg":"MongoDB starting","attr":{"pid":1,"port":27017,"dbPath":"/data/db","architecture":"64-bit","host":"a83a3e8719fb"}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:10.764+00:00"},"s":"I",  "c":"CONTROL",  "id":23403,   "ctx":"initandlisten","msg":"Build Info","attr":{"buildInfo":{"version":"6.0.1","gitVersion":"32f0f9c88dc44a2c8073a5bd47cf779d4bfdee6b","openSSLVersion":"OpenSSL 1.1.1f  31 Mar 2020","modules":[],"allocator":"tcmalloc","environment":{"distmod":"ubuntu2004","distarch":"x86_64","target_arch":"x86_64"}}}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:10.764+00:00"},"s":"I",  "c":"CONTROL",  "id":51765,   "ctx":"initandlisten","msg":"Operating System","attr":{"os":{"name":"Ubuntu","version":"20.04"}}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:10.764+00:00"},"s":"I",  "c":"CONTROL",  "id":21951,   "ctx":"initandlisten","msg":"Options set by 
command line","attr":{"options":{"net":{"bindIp":"*"}}}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:10.769+00:00"},"s":"I",  "c":"STORAGE",  "id":22297,   "ctx":"initandlisten","msg":"Using the XFS filesystem is strongly recommended with the WiredTiger storage engine. See http://dochub.mongodb.org/core/prodnotes-filesystem","tags":["startupWarnings"]}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:10.769+00:00"},"s":"I",  "c":"STORAGE",  "id":22315,   "ctx":"initandlisten","msg":"Opening WiredTiger","attr":{"config":"create,cache_size=12289M,session_max=33000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,remove=true,path=journal,compressor=snappy),builtin_extension_config=(zstd=(compression_level=6)),file_manager=(close_idle_time=600,close_scan_interval=10,close_handle_minimum=2000),statistics_log=(wait=0),json_output=(error,message),verbose=[recovery_progress:1,checkpoint_progress:1,compact_progress:1,backup:0,checkpoint:0,compact:0,evict:0,history_store:0,recovery:0,rts:0,salvage:0,tiered:0,timestamp:0,transaction:0,verify:0,log:0],"}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.565+00:00"},"s":"I",  "c":"STORAGE",  "id":4795906, "ctx":"initandlisten","msg":"WiredTiger opened","attr":{"durationMillis":796}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.565+00:00"},"s":"I",  "c":"RECOVERY", "id":23987,   "ctx":"initandlisten","msg":"WiredTiger recoveryTimestamp","attr":{"recoveryTimestamp":{"$timestamp":{"t":0,"i":0}}}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.697+00:00"},"s":"I",  "c":"WT",       "id":4366408, "ctx":"initandlisten","msg":"No table logging settings modifications are required for existing WiredTiger tables","attr":{"loggingEnabled":true}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.725+00:00"},"s":"W",  "c":"CONTROL",  "id":22120,   "ctx":"initandlisten","msg":"Access control 
is not enabled for the database. Read and write access to data and configuration is unrestricted","tags":["startupWarnings"]}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.725+00:00"},"s":"W",  "c":"CONTROL",  "id":22178,   "ctx":"initandlisten","msg":"/sys/kernel/mm/transparent_hugepage/enabled is 'always'. We suggest setting it to 'never'","tags":["startupWarnings"]}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.725+00:00"},"s":"W",  "c":"CONTROL",  "id":5123300, "ctx":"initandlisten","msg":"vm.max_map_count is too low","attr":{"currentValue":65530,"recommendedMinimum":1677720,"maxConns":838860},"tags":["startupWarnings"]}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.725+00:00"},"s":"I",  "c":"STORAGE",  "id":20320,   "ctx":"initandlisten","msg":"createCollection","attr":{"namespace":"admin.system.version","uuidDisposition":"provided","uuid":{"uuid":{"$uuid":"80ca8be6-6b96-4f26-9108-5d7550c56728"}},"options":{"uuid":{"$uuid":"80ca8be6-6b96-4f26-9108-5d7550c56728"}}}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.790+00:00"},"s":"I",  "c":"INDEX",    "id":20345,   "ctx":"initandlisten","msg":"Index build: done building","attr":{"buildUUID":null,"collectionUUID":{"uuid":{"$uuid":"80ca8be6-6b96-4f26-9108-5d7550c56728"}},"namespace":"admin.system.version","index":"_id_","ident":"index-1--346369469478714310","collectionIdent":"collection-0--346369469478714310","commitTimestamp":null}}      
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.791+00:00"},"s":"I",  "c":"REPL",     "id":20459,   "ctx":"initandlisten","msg":"Setting featureCompatibilityVersion","attr":{"newVersion":"6.0"}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.791+00:00"},"s":"I",  "c":"REPL",     "id":5853300, "ctx":"initandlisten","msg":"current featureCompatibilityVersion value","attr":{"featureCompatibilityVersion":"6.0","context":"setFCV"}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.791+00:00"},"s":"I",  "c":"NETWORK",  "id":4915702, "ctx":"initandlisten","msg":"Updated wire specification","attr":{"oldSpec":{"incomingExternalClient":{"minWireVersion":0,"maxWireVersion":17},"incomingInternalClient":{"minWireVersion":0,"maxWireVersion":17},"outgoing":{"minWireVersion":6,"maxWireVersion":17},"isInternalClient":true},"newSpec":{"incomingExternalClient":{"minWireVersion":0,"maxWireVersion":17},"incomingInternalClient":{"minWireVersion":17,"maxWireVersion":17},"outgoing":{"minWireVersion":17,"maxWireVersion":17},"isInternalClient":true}}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.791+00:00"},"s":"I",  "c":"NETWORK",  "id":4915702, "ctx":"initandlisten","msg":"Updated wire specification","attr":{"oldSpec":{"incomingExternalClient":{"minWireVersion":0,"maxWireVersion":17},"incomingInternalClient":{"minWireVersion":17,"maxWireVersion":17},"outgoing":{"minWireVersion":17,"maxWireVersion":17},"isInternalClient":true},"newSpec":{"incomingExternalClient":{"minWireVersion":0,"maxWireVersion":17},"incomingInternalClient":{"minWireVersion":17,"maxWireVersion":17},"outgoing":{"minWireVersion":17,"maxWireVersion":17},"isInternalClient":true}}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.791+00:00"},"s":"I",  "c":"REPL",     "id":5853300, "ctx":"initandlisten","msg":"current featureCompatibilityVersion value","attr":{"featureCompatibilityVersion":"6.0","context":"startup"}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.791+00:00"},"s":"I",  "c":"STORAGE",  "id":5071100, "ctx":"initandlisten","msg":"Clearing temp directory"}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.791+00:00"},"s":"I",  "c":"CONTROL",  "id":20536,   "ctx":"initandlisten","msg":"Flow Control is enabled on this deployment"}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.792+00:00"},"s":"I",  "c":"FTDC",     "id":20625,   "ctx":"initandlisten","msg":"Initializing full-time diagnostic data capture","attr":{"dataDirectory":"/data/db/diagnostic.data"}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.793+00:00"},"s":"I",  "c":"STORAGE",  "id":20320,   "ctx":"initandlisten","msg":"createCollection","attr":{"namespace":"local.startup_log","uuidDisposition":"generated","uuid":{"uuid":{"$uuid":"d1a96089-5965-42fa-8244-40c2bb5a3afa"}},"options":{"capped":true,"size":10485760}}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.845+00:00"},"s":"I",  "c":"INDEX",    "id":20345,   "ctx":"initandlisten","msg":"Index build: done building","attr":{"buildUUID":null,"collectionUUID":{"uuid":{"$uuid":"d1a96089-5965-42fa-8244-40c2bb5a3afa"}},"namespace":"local.startup_log","index":"_id_","ident":"index-3--346369469478714310","collectionIdent":"collection-2--346369469478714310","commitTimestamp":null}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.846+00:00"},"s":"I",  "c":"REPL",     "id":6015317, "ctx":"initandlisten","msg":"Setting new configuration state","attr":{"newState":"ConfigReplicationDisabled","oldState":"ConfigPreStart"}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.846+00:00"},"s":"I",  "c":"STORAGE",  "id":22262,   "ctx":"initandlisten","msg":"Timestamp monitor starting"}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.847+00:00"},"s":"I",  "c":"CONTROL",  "id":20712,   "ctx":"LogicalSessionCacheReap","msg":"Sessions collection is not set up; waiting until next sessions reap interval","attr":{"error":"NamespaceNotFound: config.system.sessions does not exist"}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.848+00:00"},"s":"I",  "c":"NETWORK",  "id":23015,   "ctx":"listener","msg":"Listening on","attr":{"address":"/tmp/mongodb-27017.sock"}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.848+00:00"},"s":"I",  "c":"NETWORK",  "id":23015,   "ctx":"listener","msg":"Listening on","attr":{"address":"0.0.0.0"}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.848+00:00"},"s":"I",  "c":"NETWORK",  "id":23016,   "ctx":"listener","msg":"Waiting for connections","attr":{"port":27017,"ssl":"off"}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.848+00:00"},"s":"I",  "c":"STORAGE",  "id":20320,   "ctx":"LogicalSessionCacheRefresh","msg":"createCollection","attr":{"namespace":"config.system.sessions","uuidDisposition":"generated","uuid":{"uuid":{"$uuid":"5792cb13-3866-4fd1-9670-8582e06355ec"}},"options":{}}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.928+00:00"},"s":"I",  "c":"INDEX",    "id":20345,   "ctx":"LogicalSessionCacheRefresh","msg":"Index build: done building","attr":{"buildUUID":null,"collectionUUID":{"uuid":{"$uuid":"5792cb13-3866-4fd1-9670-8582e06355ec"}},"namespace":"config.system.sessions","index":"_id_","ident":"index-5--346369469478714310","collectionIdent":"collection-4--346369469478714310","commitTimestamp":null}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.928+00:00"},"s":"I",  "c":"INDEX",    "id":20345,   "ctx":"LogicalSessionCacheRefresh","msg":"Index build: done building","attr":{"buildUUID":null,"collectionUUID":{"uuid":{"$uuid":"5792cb13-3866-4fd1-9670-8582e06355ec"}},"namespace":"config.system.sessions","index":"lsidTTLIndex","ident":"index-6--346369469478714310","collectionIdent":"collection-4--346369469478714310","commitTimestamp":null}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.971+00:00"},"s":"I",  "c":"NETWORK",  "id":22943,   "ctx":"listener","msg":"Connection accepted","attr":{"remote":"172.18.0.3:34380","uuid":"88776307-e5ef-4d24-9c67-7c7c72444206","connectionId":1,"connectionCount":1}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.972+00:00"},"s":"I",  "c":"NETWORK",  "id":51800,   "ctx":"conn1","msg":"client metadata","attr":{"remote":"172.18.0.3:34380","client":"conn1","doc":{"driver":{"name":"PyMongo","version":"4.2.0"},"os":{"type":"Linux","name":"Linux","architecture":"x86_64","version":"5.10.16.3-microsoft-standard-WSL2"},"platform":"CPython 3.10.6.final.0"}}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.973+00:00"},"s":"I",  "c":"NETWORK",  "id":22943,   "ctx":"listener","msg":"Connection accepted","attr":{"remote":"172.18.0.3:34382","uuid":"6ec4e4ad-bfa4-40f2-a650-45918874c26b","connectionId":2,"connectionCount":2}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.974+00:00"},"s":"I",  "c":"NETWORK",  "id":22943,   "ctx":"listener","msg":"Connection accepted","attr":{"remote":"172.18.0.3:34384","uuid":"247813c1-ac9d-46f4-862a-a7f661fa3e79","connectionId":3,"connectionCount":3}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.974+00:00"},"s":"I",  "c":"NETWORK",  "id":51800,   "ctx":"conn3","msg":"client metadata","attr":{"remote":"172.18.0.3:34384","client":"conn3","doc":{"driver":{"name":"PyMongo","version":"4.2.0"},"os":{"type":"Linux","name":"Linux","architecture":"x86_64","version":"5.10.16.3-microsoft-standard-WSL2"},"platform":"CPython 3.10.6.final.0"}}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:11.974+00:00"},"s":"I",  "c":"NETWORK",  "id":51800,   "ctx":"conn2","msg":"client metadata","attr":{"remote":"172.18.0.3:34382","client":"conn2","doc":{"driver":{"name":"PyMongo","version":"4.2.0"},"os":{"type":"Linux","name":"Linux","architecture":"x86_64","version":"5.10.16.3-microsoft-standard-WSL2"},"platform":"CPython 3.10.6.final.0"}}}
app_1    | {'databases': [{'empty': False, 'name': 'admin', 'sizeOnDisk': 8192},
app_1    |                {'empty': False, 'name': 'config', 'sizeOnDisk': 12288},
app_1    |                {'empty': False, 'name': 'local', 'sizeOnDisk': 8192}],
app_1    |  'ok': 1.0,
app_1    |  'totalSize': 28672,
app_1    |  'totalSizeMb': 0}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:12.474+00:00"},"s":"I",  "c":"-",        "id":20883,   "ctx":"conn1","msg":"Interrupted operation as its client disconnected","attr":{"opId":15}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:12.474+00:00"},"s":"I",  "c":"NETWORK",  "id":22944,   "ctx":"conn1","msg":"Connection ended","attr":{"remote":"172.18.0.3:34380","uuid":"88776307-e5ef-4d24-9c67-7c7c72444206","connectionId":1,"connectionCount":2}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:12.481+00:00"},"s":"I",  "c":"NETWORK",  "id":22944,   "ctx":"conn2","msg":"Connection ended","attr":{"remote":"172.18.0.3:34382","uuid":"6ec4e4ad-bfa4-40f2-a650-45918874c26b","connectionId":2,"connectionCount":1}}
mongo_1  | {"t":{"$date":"2022-08-28T07:51:12.481+00:00"},"s":"I",  "c":"NETWORK",  "id":22944,   "ctx":"conn3","msg":"Connection ended","attr":{"remote":"172.18.0.3:34384","uuid":"247813c1-ac9d-46f4-862a-a7f661fa3e79","connectionId":3,"connectionCount":0}}
docker-compose-app_app_1 exited with code 0

mongo_1  | {"t":{"$date":"2022-08-28T07:51:12.481+00:00"},"s":"I",  "c":"NETWORK",  "id":22944,   "ctx":"conn3","msg":"Connection ended","attr":{"remote":"172.18.0.3:34384","uuid":"247813c1-ac9d-46f4-862a-a7f661fa3e79","connectionId":3,"connectionCount":0}}
docker-compose-app_app_1 exited with code 0
Gracefully stopping... (press Ctrl+C again to force)
Stopping docker-compose-app_mongo_1 ... done
PS C:\work\docker\stashchuk\docker-compose-app> 

PS C:\work\docker\stashchuk\docker-compose-app> docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
PS C:\work\docker\stashchuk\docker-compose-app> docker ps -a     
CONTAINER ID   IMAGE                    COMMAND                  CREATED             STATUS                         PORTS     NAMES
9b436bbd1323   docker-compose-app_app   "python main.py"         7 minutes ago       Exited (0) 7 minutes ago                 docker-compose-app_app_1
a83a3e8719fb   mongo                    "docker-entrypoint.s…"   7 minutes ago       Exited (0) 48 seconds ago                docker-compose-app_mongo_1
ee5a9ca0c0ad   my-file-writer           "docker-entrypoint.s…"   39 minutes ago      Exited (0) 39 minutes ago                my-node-app
01c0ebb0be96   b7c21e5ae472             "docker-entrypoint.s…"   43 minutes ago      Exited (0) 43 minutes ago                crazy_bardeen
56aa30af4179   b7c21e5ae472             "docker-entrypoint.s…"   48 minutes ago      Exited (0) 48 minutes ago                strange_tesla
97a7d0ca5cf8   9f04cd07d835             "docker-entrypoint.s…"   52 minutes ago      Exited (1) 52 minutes ago                competent_mayer
96a0462c850c   my-calendar              "python main.py"         About an hour ago   Exited (0) About an hour ago             frosty_ride
cc5a5d0ca11d   my-calendar:2.0.0        "python main.py"         About an hour ago   Exited (0) About an hour ago             youthful_bouman
b43d806ff1aa   my-calendar              "python main.py"         About an hour ago   Exited (0) About an hour ago             competent_jang
bcd789543d50   my-calendar              "python main.py"         About an hour ago   Exited (0) About an hour ago             sweet_jemison
PS C:\work\docker\stashchuk\docker-compose-app>


PS C:\work\docker\stashchuk\docker-compose-app> docker container prune
WARNING! This will remove all stopped containers.
Are you sure you want to continue? [y/N] y       
Deleted Containers:
9b436bbd1323ff43581167370156662e098050f0c16ce68a0fb03d3bda0fedf6
a83a3e8719fb678a338f2d10a42e649d9c868c7977c49e34bcef2838a683b0fc
ee5a9ca0c0ad29b0b7123bc107432fadac94876b012dfdaf835d45c36168e785
01c0ebb0be96d79a782d23edbe162fe3c54d07454c797cc29e03aa381c0135bd
56aa30af417926da8a689a9950da6dbb934805d1f44da8f199dfeb6c91ae0cdc
97a7d0ca5cf8148a3d0fc97f6a1432efda09fa55e68062d950cd38c79e53078d
96a0462c850c6bf46a408212f01fbab3639bc78cb1c9308bfeb38aea0d02e909
cc5a5d0ca11d05856ab57358df88229a2d6c6ab32fedb4bbc7b85837984bb07f
b43d806ff1aa89fdaf07b7ed57f48c69b794c21f6dff73920a8cb34586ab6599
bcd789543d504a4543ba696c9dff763d63c66375beafd30d49be5465ca206379

Total reclaimed space: 1.981MB
PS C:\work\docker\stashchuk\docker-compose-app> 


PS C:\work\docker\stashchuk\docker-compose-app> docker-compose up -d  
Creating docker-compose-app_mongo_1 ... done
Creating docker-compose-app_app_1   ... done
PS C:\work\docker\stashchuk\docker-compose-app> 


PS C:\work\docker\stashchuk\docker-compose-app> docker ps -a
CONTAINER ID   IMAGE                    COMMAND                  CREATED          STATUS                     PORTS       NAMES
9d155a1d2565   docker-compose-app_app   "python main.py"         15 seconds ago   Exited (0) 9 seconds ago               docker-compose-app_app_1
4cafaf0aa2be   mongo                    "docker-entrypoint.s…"   15 seconds ago   Up 11 seconds              27017/tcp   docker-compose-app_mongo_1
PS C:\work\docker\stashchuk\docker-compose-app> 


Останавливаем контейнеры. Они автоматически удаляются, удаляется их общая сеть.

PS C:\work\docker\stashchuk\docker-compose-app> docker-compose down
Stopping docker-compose-app_mongo_1 ... done
Removing docker-compose-app_app_1   ... done
Removing docker-compose-app_mongo_1 ... done
Removing network docker-compose-app_default
PS C:\work\docker\stashchuk\docker-compose-app> 


Изменили приложение python. Снова сбилдим - создаём все необходимые образы

PS C:\work\docker\stashchuk\docker-compose-app> docker-compose up -d --build
Creating network "docker-compose-app_default" with the default driver
Building app
[+] Building 4.1s (9/9) FINISHED
 => [internal] load build definition from Dockerfile                                                                                                                      0.2s 
 => => transferring dockerfile: 31B                                                                                                                                       0.0s 
 => [internal] load .dockerignore                                                                                                                                         0.2s 
 => => transferring context: 2B                                                                                                                                           0.0s 
 => [internal] load metadata for docker.io/library/python:alpine                                                                                                          3.4s 
 => [1/4] FROM docker.io/library/python:alpine@sha256:0c46c7f15ee201a2e2dc3579dbc302f989a20b1283e67f884941e071372eb2cc                                                    0.0s 
 => [internal] load build context                                                                                                                                         0.1s 
 => => transferring context: 294B                                                                                                                                         0.0s 
 => CACHED [2/4] WORKDIR /app                                                                                                                                             0.0s 
 => CACHED [3/4] RUN pip install pymongo                                                                                                                                  0.0s 
 => [4/4] COPY . .                                                                                                                                                        0.1s 
 => exporting to image                                                                                                                                                    0.3s 
 => => exporting layers                                                                                                                                                   0.1s 
 => => writing image sha256:56b222bdec6597f8919e9cdab1b37602a41f7e247e35dcb1c0532277b52e208f                                                                              0.0s 
 => => naming to docker.io/library/docker-compose-app_app                                                                                                                 0.0s 

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
Creating docker-compose-app_mongo_1 ... done
Creating docker-compose-app_app_1   ... done
PS C:\work\docker\stashchuk\docker-compose-app> 



Смотрим логи контейнера


PS C:\work\docker\stashchuk\docker-compose-app> docker ps -a
CONTAINER ID   IMAGE                    COMMAND                  CREATED              STATUS                      PORTS       NAMES
8c870d71b9b1   docker-compose-app_app   "python main.py"         About a minute ago   Exited (0) 55 seconds ago               docker-compose-app_app_1
62cd5c7b8241   mongo                    "docker-entrypoint.s…"   About a minute ago   Up 57 seconds               27017/tcp   docker-compose-app_mongo_1
PS C:\work\docker\stashchuk\docker-compose-app> docker logs 8c870d71b9b1
{'databases': [{'empty': False, 'name': 'admin', 'sizeOnDisk': 8192},
               {'empty': False, 'name': 'local', 'sizeOnDisk': 8192}],
 'ok': 1.0,
 'totalSize': 16384,
 'totalSizeMb': 0}
End
PS C:\work\docker\stashchuk\docker-compose-app> 

Останавливаем контейнеры

PS C:\work\docker\stashchuk\docker-compose-app> docker-compose down
Stopping docker-compose-app_mongo_1 ... done
Removing docker-compose-app_app_1   ... done
Removing docker-compose-app_mongo_1 ... done
Removing network docker-compose-app_default
PS C:\work\docker\stashchuk\docker-compose-app> 


Node.js установлен

PS C:\work\docker\stashchuk\time-app> node --version
v17.3.0

PS C:\work\docker\stashchuk\time-app> npm --version
8.3.0

!!!!!!!PS C:\work\docker\stashchuk\time-app\frontend> npm install -g npm@8.18.0



PS C:\work\docker\stashchuk\time-app\frontend> docker build . -t mite-app-frontend
[+] Building 14.0s (10/10) FINISHED
 => [internal] load build definition from Dockerfile                                                                                                                      0.2s 
 => => transferring dockerfile: 175B                                                                                                                                      0.0s 
 => [internal] load .dockerignore                                                                                                                                         0.2s 
 => => transferring context: 2B                                                                                                                                           0.0s 
 => [internal] load metadata for docker.io/library/node:alpine                                                                                                            2.8s 
 => [1/5] FROM docker.io/library/node:alpine@sha256:9b435939937b0deef5c1f6fcfd1f265aa7a77574388b671fda322e662744472d                                                      0.0s 
 => [internal] load build context                                                                                                                                         0.1s 
 => => transferring context: 72.44kB                                                                                                                                      0.1s 
 => CACHED [2/5] WORKDIR /app                                                                                                                                             0.0s 
 => [3/5] COPY package*.json ./                                                                                                                                           0.1s 
 => [4/5] RUN npm install                                                                                                                                                 9.5s 
 => [5/5] COPY . .                                                                                                                                                        0.2s 
 => exporting to image                                                                                                                                                    1.0s 
 => => exporting layers                                                                                                                                                   0.9s 
 => => writing image sha256:08d2b3029513361098e6fafc6b0a378a1257615b14a59502d9bcb18b20d4cb86                                                                              0.0s 
 => => naming to docker.io/library/mite-app-frontend                                                                                                                      0.0s 

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them



PS C:\work\docker\stashchuk\time-app\frontend> docker build . -t time-app-frontend
[+] Building 1.3s (10/10) FINISHED
 => [internal] load build definition from Dockerfile                                                                                                                      0.1s 
 => => transferring dockerfile: 32B                                                                                                                                       0.0s 
 => [internal] load .dockerignore                                                                                                                                         0.1s 
 => => transferring context: 2B                                                                                                                                           0.0s 
 => [internal] load metadata for docker.io/library/node:alpine                                                                                                            0.9s 
 => [internal] load build context                                                                                                                                         0.1s 
 => => transferring context: 586B                                                                                                                                         0.0s 
 => [1/5] FROM docker.io/library/node:alpine@sha256:9b435939937b0deef5c1f6fcfd1f265aa7a77574388b671fda322e662744472d                                                      0.0s 
 => CACHED [2/5] WORKDIR /app                                                                                                                                             0.0s 
 => CACHED [3/5] COPY package*.json ./                                                                                                                                    0.0s 
 => CACHED [4/5] RUN npm install                                                                                                                                          0.0s 
 => CACHED [5/5] COPY . .                                                                                                                                                 0.0s 
 => exporting to image                                                                                                                                                    0.1s 
 => => exporting layers                                                                                                                                                   0.0s 
 => => writing image sha256:08d2b3029513361098e6fafc6b0a378a1257615b14a59502d9bcb18b20d4cb86                                                                              0.0s 
 => => naming to docker.io/library/time-app-frontend                                                                                                                      0.0s 

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them




PS C:\work\docker\stashchuk\time-app\frontend> docker images
REPOSITORY               TAG       IMAGE ID       CREATED             SIZE
time-app-frontend        latest    08d2b3029513   3 minutes ago       225MB
docker-compose-app_app   latest    56b222bdec65   About an hour ago   61.6MB
<none>                   <none>    e98eee14711a   2 hours ago         61.6MB
my-file-writer           latest    99972910552b   2 hours ago         167MB
<none>                   <none>    b7c21e5ae472   2 hours ago         167MB
<none>                   <none>    9f04cd07d835   2 hours ago         167MB
my-calendar              2.0.0     18bdfbad597a   3 hours ago         48.7MB
my-calendar              latest    7bf2d11beeb4   3 hours ago         48.7MB
mongo                    latest    a3c1334134aa   2 days ago          693MB
nginx                    latest    2b7d6430f78d   5 days ago          142MB
busybox                  latest    7a80323521cc   4 weeks ago         1.24MB
hello-world              latest    feb5d9fea6a5   11 months ago       13.3kB



PS C:\work\docker\stashchuk\time-app\frontend> docker run -p 3000:3000 time-app-frontend

> vue-project@0.0.0 dev
> vite --host

Pre-bundling dependencies:
  vue
  @meforma/vue-toaster
  moment
(this will be run only when your dependencies or config have changed)

  vite v2.7.13 dev server running at:

  > Local:    http://localhost:3000/
  > Network:  http://172.17.0.2:3000/

  ready in 704ms.


PS C:\work\docker\stashchuk> cd .\time-app\          
PS C:\work\docker\stashchuk\time-app> docker ps
CONTAINER ID   IMAGE               COMMAND                  CREATED              STATUS              PORTS                    NAMES      
bcf1887d83bb   time-app-frontend   "docker-entrypoint.s…"   About a minute ago   Up About a minute   0.0.0.0:3000->3000/tcp   silly_bassi
PS C:\work\docker\stashchuk\time-app> docker exec -it bcf1887d83bb sh
/app #


/app # npm --version
8.18.0
/app # node --version
v18.8.0
/app #


PS C:\work\docker\stashchuk\time-app> cd api
PS C:\work\docker\stashchuk\time-app\api> docker build . -t time-app-backend       
[+] Building 9.8s (10/10) FINISHED
 => [internal] load build definition from Dockerfile                                                                                                                      0.2s 
 => => transferring dockerfile: 175B                                                                                                                                      0.0s 
 => [internal] load .dockerignore                                                                                                                                         0.2s 
 => => transferring context: 2B                                                                                                                                           0.0s 
 => [internal] load metadata for docker.io/library/node:alpine                                                                                                            2.0s 
 => [internal] load build context                                                                                                                                         0.1s 
 => => transferring context: 126.58kB                                                                                                                                     0.0s 
 => [1/5] FROM docker.io/library/node:alpine@sha256:9b435939937b0deef5c1f6fcfd1f265aa7a77574388b671fda322e662744472d                                                      0.0s 
 => CACHED [2/5] WORKDIR /app                                                                                                                                             0.0s 
 => [3/5] COPY package*.json ./                                                                                                                                           0.1s 
 => [4/5] RUN npm install                                                                                                                                                 6.3s 
 => [5/5] COPY . .                                                                                                                                                        0.3s
 => exporting to image                                                                                                                                                    0.6s 
 => => exporting layers                                                                                                                                                   0.5s 
 => => writing image sha256:620b3c4ad8d1fde269343e9e198151764173f548847b0041772cbbc64a9bea17                                                                              0.0s 
 => => naming to docker.io/library/time-app-backend                                                                                                                       0.0s 

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
PS C:\work\docker\stashchuk\time-app\api> 





PS C:\work\docker\stashchuk\time-app\api> docker images
REPOSITORY               TAG       IMAGE ID       CREATED          SIZE
time-app-backend         latest    620b3c4ad8d1   2 minutes ago    177MB
time-app-frontend        latest    08d2b3029513   20 minutes ago   225MB
docker-compose-app_app   latest    56b222bdec65   2 hours ago      61.6MB
<none>                   <none>    e98eee14711a   2 hours ago      61.6MB
my-file-writer           latest    99972910552b   3 hours ago      167MB
<none>                   <none>    b7c21e5ae472   3 hours ago      167MB
<none>                   <none>    9f04cd07d835   3 hours ago      167MB
my-calendar              2.0.0     18bdfbad597a   3 hours ago      48.7MB
my-calendar              latest    7bf2d11beeb4   3 hours ago      48.7MB
mongo                    latest    a3c1334134aa   2 days ago       693MB
nginx                    latest    2b7d6430f78d   5 days ago       142MB
busybox                  latest    7a80323521cc   4 weeks ago      1.24MB
hello-world              latest    feb5d9fea6a5   11 months ago    13.3kB


docker run -p 5000:5000 time-app-backtend 


Передача параметра в контейнер


PS C:\work\docker\stashchuk\time-app> docker run -d -e MY_ENV_VARIABLE=test nginx
4a8efb1e3deaae2745e37ab2549e09efd4192dae74f36af628a28fd89b17586f
PS C:\work\docker\stashchuk\time-app> 

PS C:\work\docker\stashchuk\time-app> docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS     NAMES
4a8efb1e3dea   nginx     "/docker-entrypoint.…"   33 seconds ago   Up 31 seconds   80/tcp    angry_thompson
PS C:\work\docker\stashchuk\time-app> 

PS C:\work\docker\stashchuk\time-app> docker exec -it 4a8efb1e3dea  sh

# printenv
HOSTNAME=4a8efb1e3dea
HOME=/root
PKG_RELEASE=1~bullseye
TERM=xterm
NGINX_VERSION=1.23.1
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
NJS_VERSION=0.7.6
MY_ENV_VARIABLE=test
PWD=/
# exit
PS C:\work\docker\stashchuk\time-app> docker stop 4a8efb1e3dea
4a8efb1e3dea
PS C:\work\docker\stashchuk\time-app> docker rm 4a8efb1e3dea
4a8efb1e3dea



====================================================================


PS C:\work\docker\stashchuk\time-app> docker-compose up   
Creating network "time-app_default" with the default driver
Building frontend
[+] Building 3.9s (10/10) FINISHED
 => [internal] load build definition from Dockerfile                                                                                                                      0.2s 
 => => transferring dockerfile: 175B                                                                                                                                      0.0s 
 => [internal] load .dockerignore                                                                                                                                         0.2s 
 => => transferring context: 2B                                                                                                                                           0.0s 
 => [internal] load metadata for docker.io/library/node:alpine                                                                                                            3.2s 
 => [internal] load build context                                                                                                                                         0.1s 
 => => transferring context: 72.44kB                                                                                                                                      0.0s 
 => [1/5] FROM docker.io/library/node:alpine@sha256:9b435939937b0deef5c1f6fcfd1f265aa7a77574388b671fda322e662744472d                                                      0.0s 
 => CACHED [2/5] WORKDIR /app                                                                                                                                             0.0s 
 => CACHED [3/5] COPY package*.json ./                                                                                                                                    0.0s 
 => CACHED [4/5] RUN npm install                                                                                                                                          0.0s 
 => CACHED [5/5] COPY . .                                                                                                                                                 0.0s 
 => exporting to image                                                                                                                                                    0.1s
 => => exporting layers                                                                                                                                                   0.0s 
 => => writing image sha256:08d2b3029513361098e6fafc6b0a378a1257615b14a59502d9bcb18b20d4cb86                                                                              0.0s 
 => => naming to docker.io/library/time-app_frontend                                                                                                                      0.0s 

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
WARNING: Image for service frontend was built because it did not already exist. To rebuild this image you must use `docker-compose build` or `docker-compose up --build`.
Building api
[+] Building 1.1s (10/10) FINISHED
 => [internal] load build definition from Dockerfile                                                                                                                      0.2s 
 => => transferring dockerfile: 175B                                                                                                                                      0.0s 
 => [internal] load .dockerignore                                                                                                                                         0.2s 
 => => transferring context: 2B                                                                                                                                           0.0s 
 => [internal] load metadata for docker.io/library/node:alpine                                                                                                            0.4s 
 => [1/5] FROM docker.io/library/node:alpine@sha256:9b435939937b0deef5c1f6fcfd1f265aa7a77574388b671fda322e662744472d                                                      0.0s 
 => [internal] load build context                                                                                                                                         0.1s 
 => => transferring context: 126.58kB                                                                                                                                     0.0s 
 => CACHED [2/5] WORKDIR /app                                                                                                                                             0.0s 
 => CACHED [3/5] COPY package*.json ./                                                                                                                                    0.0s 
 => CACHED [4/5] RUN npm install                                                                                                                                          0.0s 
 => CACHED [5/5] COPY . .                                                                                                                                                 0.0s 
 => exporting to image                                                                                                                                                    0.2s 
 => => exporting layers                                                                                                                                                   0.0s 
 => => writing image sha256:620b3c4ad8d1fde269343e9e198151764173f548847b0041772cbbc64a9bea17                                                                              0.0s 
 => => naming to docker.io/library/time-app_api                                                                                                                           0.0s 

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
WARNING: Image for service api was built because it did not already exist. To rebuild this image you must use `docker-compose build` or `docker-compose up --build`.
Pulling mysql (mysql:)...
latest: Pulling from library/mysql
ee4ca39e1b6e: Pull complete
55731ee5cc27: Pull complete
f3fd4ba8837d: Pull complete
dfdb35add3bd: Pull complete
cb34f3e592a8: Pull complete
961390a73dd2: Pull complete
338d4f22364b: Pull complete
633ee7c98915: Pull complete
961374a411ee: Pull complete
da93a12a127a: Pull complete
6931149ad6ae: Pull complete
Digest: sha256:00f8c8d24e53810771fcb9e8dc8cdff3bd11ef8cddbf13f4e1443a027c5bf617
Status: Downloaded newer image for mysql:latest
Pulling adminer (adminer:)...
latest: Pulling from library/adminer
213ec9aee27d: Already exists
a600fdbc30cc: Pulling fs layer
0cdd6cb15c0d: Pulling fs layer
8a4c40d8aee7: Pull complete
77e67522f4fd: Pull complete
d181492ef8e9: Pull complete
0d5c09a73378: Pull complete
8bb8e21282b9: Pull complete
fdd7ab990e10: Pull complete
d59940a6c65c: Pull complete
8af31b44c60c: Pull complete
8f57d1664c2a: Pull complete
eafa31c9e999: Pull complete
d99ebf4176fd: Pull complete
dd175257ae8d: Pull complete
Digest: sha256:ffef52f1cdc49e9877f8e73b62afe358396241fd3d018dd6e55bc865c2d58c87
Status: Downloaded newer image for adminer:latest
Creating time-app_adminer_1  ... done
Creating time-app_mysql_1    ... done
Creating time-app_api_1      ... done
Creating time-app_frontend_1 ... done
Attaching to time-app_mysql_1, time-app_adminer_1, time-app_api_1, time-app_frontend_1
adminer_1   | [Sun Aug 28 10:18:51 2022] PHP 7.4.30 Development Server (http://[::]:8080) started
mysql_1     | 2022-08-28 10:18:51+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 8.0.30-1.el8 started.
mysql_1     | 2022-08-28 10:18:51+00:00 [Note] [Entrypoint]: Switching to dedicated user 'mysql'
mysql_1     | 2022-08-28 10:18:51+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 8.0.30-1.el8 started.
mysql_1     | 2022-08-28 10:18:51+00:00 [Note] [Entrypoint]: Initializing database files
mysql_1     | 2022-08-28T10:18:51.619720Z 0 [Warning] [MY-011068] [Server] The syntax '--skip-host-cache' is deprecated and will be removed in a future release. Please use SET GLOBAL host_cache_size=0 instead.
mysql_1     | 2022-08-28T10:18:51.619874Z 0 [System] [MY-013169] [Server] /usr/sbin/mysqld (mysqld 8.0.30) initializing of server in progress as process 79
mysql_1     | 2022-08-28T10:18:51.634414Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.
api_1       | 
api_1       | > api@1.0.0 dev
api_1       | > nodemon index.mjs
api_1       |
api_1       | [nodemon] 2.0.15
api_1       | [nodemon] to restart at any time, enter `rs`
api_1       | [nodemon] watching path(s): *.*
api_1       | [nodemon] watching extensions: js,mjs,json
api_1       | [nodemon] starting `node index.mjs`
frontend_1  | 
frontend_1  | > vue-project@0.0.0 dev
frontend_1  | > vite --host
frontend_1  |
api_1       | Express web server is running at http://localhost:5000
frontend_1  | Pre-bundling dependencies:
frontend_1  |   vue
frontend_1  |   @meforma/vue-toaster
frontend_1  |   moment
frontend_1  | (this will be run only when your dependencies or config have changed)
frontend_1  | 
frontend_1  |   vite v2.7.13 dev server running at:
frontend_1  |
frontend_1  |   > Local:    http://localhost:3000/
frontend_1  |   > Network:  http://172.20.0.5:3000/
frontend_1  |
frontend_1  |   ready in 609ms.
frontend_1  |
mysql_1     | 2022-08-28T10:18:54.067373Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.
mysql_1     | 2022-08-28T10:18:58.983043Z 6 [Warning] [MY-010453] [Server] root@localhost is created with an empty password ! Please consider switching off the --initialize-insecure option.
mysql_1     | 2022-08-28 10:19:08+00:00 [Note] [Entrypoint]: Database files initialized
mysql_1     | 2022-08-28 10:19:08+00:00 [Note] [Entrypoint]: Starting temporary server
mysql_1     | 2022-08-28T10:19:09.034888Z 0 [Warning] [MY-011068] [Server] The syntax '--skip-host-cache' is deprecated and will be removed in a future release. Please use SET GLOBAL host_cache_size=0 instead.
mysql_1     | 2022-08-28T10:19:09.037337Z 0 [System] [MY-010116] [Server] /usr/sbin/mysqld (mysqld 8.0.30) starting as process 130
mysql_1     | 2022-08-28T10:19:09.072680Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.
mysql_1     | 2022-08-28T10:19:09.456709Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.
mysql_1     | 2022-08-28T10:19:10.147751Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.
mysql_1     | 2022-08-28T10:19:10.147880Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported for this channel.
mysql_1     | 2022-08-28T10:19:10.169215Z 0 [Warning] [MY-011810] [Server] Insecure configuration for --pid-file: Location '/var/run/mysqld' in the path is accessible to all OS users. Consider choosing a different directory.
mysql_1     | 2022-08-28T10:19:10.201874Z 0 [System] [MY-011323] [Server] X Plugin ready for connections. Socket: /var/run/mysqld/mysqlx.sock
mysql_1     | 2022-08-28T10:19:10.202789Z 0 [System] [MY-010931] [Server] /usr/sbin/mysqld: ready for connections. Version: '8.0.30'  socket: '/var/run/mysqld/mysqld.sock'  port: 0  MySQL Community Server - GPL.
mysql_1     | 2022-08-28 10:19:10+00:00 [Note] [Entrypoint]: Temporary server started.
mysql_1     | '/var/lib/mysql/mysql.sock' -> '/var/run/mysqld/mysqld.sock'
mysql_1     | Warning: Unable to load '/usr/share/zoneinfo/iso3166.tab' as time zone. Skipping it.
mysql_1     | Warning: Unable to load '/usr/share/zoneinfo/leapseconds' as time zone. Skipping it.
mysql_1     | Warning: Unable to load '/usr/share/zoneinfo/tzdata.zi' as time zone. Skipping it.
mysql_1     | Warning: Unable to load '/usr/share/zoneinfo/zone.tab' as time zone. Skipping it.
mysql_1     | Warning: Unable to load '/usr/share/zoneinfo/zone1970.tab' as time zone. Skipping it.
mysql_1     | 2022-08-28 10:19:14+00:00 [Note] [Entrypoint]: Creating database time_db
mysql_1     | 
mysql_1     | 2022-08-28 10:19:14+00:00 [Note] [Entrypoint]: Stopping temporary server
mysql_1     | 2022-08-28T10:19:14.345913Z 11 [System] [MY-013172] [Server] Received SHUTDOWN from user root. Shutting down mysqld (Version: 8.0.30).
mysql_1     | 2022-08-28T10:19:17.613975Z 0 [System] [MY-010910] [Server] /usr/sbin/mysqld: Shutdown complete (mysqld 8.0.30)  MySQL Community Server - GPL.
mysql_1     | 2022-08-28 10:19:18+00:00 [Note] [Entrypoint]: Temporary server stopped
mysql_1     |
mysql_1     | 2022-08-28 10:19:18+00:00 [Note] [Entrypoint]: MySQL init process done. Ready for start up.
mysql_1     |
mysql_1     | 2022-08-28T10:19:18.557444Z 0 [Warning] [MY-011068] [Server] The syntax '--skip-host-cache' is deprecated and will be removed in a future release. Please use SET GLOBAL host_cache_size=0 instead.
mysql_1     | 2022-08-28T10:19:18.558346Z 0 [System] [MY-010116] [Server] /usr/sbin/mysqld (mysqld 8.0.30) starting as process 1
mysql_1     | 2022-08-28T10:19:18.573050Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.
mysql_1     | 2022-08-28T10:19:18.924827Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.
mysql_1     | 2022-08-28T10:19:19.406318Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.
mysql_1     | 2022-08-28T10:19:19.406397Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported for this channel.
mysql_1     | 2022-08-28T10:19:19.414251Z 0 [Warning] [MY-011810] [Server] Insecure configuration for --pid-file: Location '/var/run/mysqld' in the path is accessible to all OS users. Consider choosing a different directory.
mysql_1     | 2022-08-28T10:19:19.457574Z 0 [System] [MY-011323] [Server] X Plugin ready for connections. Bind-address: '::' port: 33060, socket: /var/run/mysqld/mysqlx.sock
mysql_1     | 2022-08-28T10:19:19.457714Z 0 [System] [MY-010931] [Server] /usr/sbin/mysqld: ready for connections. Version: '8.0.30'  socket: '/var/run/mysqld/mysqld.sock'  port: 3306  MySQL Community Server - GPL.


PS C:\work\docker\stashchuk> docker ps
CONTAINER ID   IMAGE               COMMAND                  CREATED         STATUS         PORTS                    NAMES
285ac4f5a66e   time-app_frontend   "docker-entrypoint.s…"   5 minutes ago   Up 5 minutes   0.0.0.0:3333->3000/tcp   time-app_frontend_1
bba77cb04ef1   time-app_api        "docker-entrypoint.s…"   5 minutes ago   Up 5 minutes   0.0.0.0:5555->5000/tcp   time-app_api_1     
7b7557d84a69   mysql               "docker-entrypoint.s…"   5 minutes ago   Up 5 minutes   3306/tcp, 33060/tcp      time-app_mysql_1   
e2b575f0f7ba   adminer             "entrypoint.sh docke…"   5 minutes ago   Up 5 minutes   0.0.0.0:8888->8080/tcp   time-app_adminer_1 
PS C:\work\docker\stashchuk> 


adminer_1   | [Sun Aug 28 10:27:19 2022] [::ffff:172.20.0.1]:57686 Accepted
adminer_1   | [Sun Aug 28 10:27:19 2022] [::ffff:172.20.0.1]:57686 [200]: GET /?file=functions.js&version=4.8.1
adminer_1   | [Sun Aug 28 10:27:19 2022] [::ffff:172.20.0.1]:57686 Closing
adminer_1   | [Sun Aug 28 10:27:19 2022] [::ffff:172.20.0.1]:57690 Accepted
adminer_1   | [Sun Aug 28 10:27:19 2022] [::ffff:172.20.0.1]:57690 [200]: GET /?file=favicon.ico&version=4.8.1
adminer_1   | [Sun Aug 28 10:27:19 2022] [::ffff:172.20.0.1]:57690 Closing
Gracefully stopping... (press Ctrl+C again to force)
Stopping time-app_frontend_1 ... done
Stopping time-app_api_1      ... done
Stopping time-app_mysql_1    ... done
Stopping time-app_adminer_1  ... done
PS C:\work\docker\stashchuk\time-app> 



PS C:\work\docker\stashchuk\time-app> docker-compose down
Removing time-app_frontend_1 ... done
Removing time-app_api_1      ... done
Removing time-app_mysql_1    ... done
Removing time-app_adminer_1  ... done
Removing network time-app_default
PS C:\work\docker\stashchuk\time-app> 



PS C:\work\docker\stashchuk\time-app> docker-compose up --build
Creating network "time-app_default" with the default driver
Building frontend
[+] Building 5.3s (10/10) FINISHED
 => [internal] load build definition from Dockerfile                                                                                                    0.1s 
 => => transferring dockerfile: 32B                                                                                                                     0.0s 
 => [internal] load .dockerignore                                                                                                                       0.1s 
 => => transferring context: 2B                                                                                                                         0.0s 
 => [internal] load metadata for docker.io/library/node:alpine                                                                                          4.9s 
 => [1/5] FROM docker.io/library/node:alpine@sha256:9b435939937b0deef5c1f6fcfd1f265aa7a77574388b671fda322e662744472d                                    0.0s 
 => [internal] load build context                                                                                                                       0.1s 
 => => transferring context: 586B                                                                                                                       0.0s 
 => CACHED [2/5] WORKDIR /app                                                                                                                           0.0s 
 => CACHED [3/5] COPY package*.json ./                                                                                                                  0.0s 
 => CACHED [4/5] RUN npm install                                                                                                                        0.0s 
 => CACHED [5/5] COPY . .                                                                                                                               0.0s 
 => exporting to image                                                                                                                                  0.1s 
 => => exporting layers                                                                                                                                 0.0s 
 => => writing image sha256:08d2b3029513361098e6fafc6b0a378a1257615b14a59502d9bcb18b20d4cb86                                                            0.0s 
 => => naming to docker.io/library/time-app_frontend                                                                                                    0.0s 

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
Building api
[+] Building 10.4s (10/10) FINISHED
 => [internal] load build definition from Dockerfile                                                                                                    0.1s 
 => => transferring dockerfile: 32B                                                                                                                     0.0s 
 => [internal] load .dockerignore                                                                                                                       0.1s 
 => => transferring context: 2B                                                                                                                         0.0s 
 => [internal] load metadata for docker.io/library/node:alpine                                                                                          0.4s 
 => [internal] load build context                                                                                                                       0.1s 
 => => transferring context: 739B                                                                                                                       0.0s 
 => [1/5] FROM docker.io/library/node:alpine@sha256:9b435939937b0deef5c1f6fcfd1f265aa7a77574388b671fda322e662744472d                                    0.0s 
 => CACHED [2/5] WORKDIR /app                                                                                                                           0.0s 
 => [3/5] COPY package*.json ./                                                                                                                         0.1s 
 => [4/5] RUN npm install                                                                                                                               8.7s 
 => [5/5] COPY . .                                                                                                                                      0.2s 
 => exporting to image                                                                                                                                  0.6s 
 => => exporting layers                                                                                                                                 0.6s 
 => => writing image sha256:afd267e7e7f3a3d7e4b7ebe4dc6a32a19e0b03f2da366a7363dfc836ed7a4921                                                            0.0s 
 => => naming to docker.io/library/time-app_api                                                                                                         0.0s 

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
Creating time-app_mysql_1    ... done
Creating time-app_frontend_1 ... done
Creating time-app_adminer_1  ... done
Creating time-app_api_1      ... done
Attaching to time-app_mysql_1, time-app_frontend_1, time-app_adminer_1, time-app_api_1
adminer_1   | [Sun Aug 28 10:37:25 2022] PHP 7.4.30 Development Server (http://[::]:8080) started
frontend_1  | 
frontend_1  | > vue-project@0.0.0 dev
frontend_1  | > vite --host
frontend_1  |
frontend_1  | Pre-bundling dependencies:
frontend_1  |   vue
frontend_1  |   @meforma/vue-toaster
frontend_1  |   moment
frontend_1  | (this will be run only when your dependencies or config have changed)
mysql_1     | 2022-08-28 10:37:24+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 8.0.30-1.el8 started.
mysql_1     | 2022-08-28 10:37:24+00:00 [Note] [Entrypoint]: Switching to dedicated user 'mysql'
mysql_1     | 2022-08-28 10:37:24+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 8.0.30-1.el8 started.
mysql_1     | 2022-08-28 10:37:24+00:00 [Note] [Entrypoint]: Initializing database files
mysql_1     | 2022-08-28T10:37:24.797532Z 0 [Warning] [MY-011068] [Server] The syntax '--skip-host-cache' is deprecated and will be removed in a future release. Please use SET GLOBAL host_cache_size=0 instead.
mysql_1     | 2022-08-28T10:37:24.797639Z 0 [System] [MY-013169] [Server] /usr/sbin/mysqld (mysqld 8.0.30) initializing of server in progress as process 80
mysql_1     | 2022-08-28T10:37:24.922823Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.
frontend_1  | 
frontend_1  |   vite v2.7.13 dev server running at:
frontend_1  |
frontend_1  |   > Local:    http://localhost:3000/
frontend_1  |   > Network:  http://172.21.0.3:3000/
frontend_1  |
frontend_1  |   ready in 692ms.
frontend_1  |
api_1       | 
api_1       | > api@1.0.0 dev
api_1       | > nodemon --exitcrash index.mjs
api_1       |
api_1       | [nodemon] 2.0.15
api_1       | [nodemon] to restart at any time, enter `rs`
api_1       | [nodemon] watching path(s): *.*
api_1       | [nodemon] watching extensions: js,mjs,json
api_1       | [nodemon] starting `node index.mjs`
mysql_1     | 2022-08-28T10:37:28.425880Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.
api_1       | Express web server is running at http://localhost:5000
api_1       | node:internal/process/promises:288
api_1       |             triggerUncaughtException(err, true /* fromPromise */);
api_1       |             ^
api_1       |
api_1       | Error: connect ECONNREFUSED 172.21.0.2:3306
api_1       |     at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1300:16) {
api_1       |   errno: -111,
api_1       |   code: 'ECONNREFUSED',
api_1       |   syscall: 'connect',
api_1       |   address: '172.21.0.2',
api_1       |   port: 3306,
api_1       |   fatal: true
api_1       | }
api_1       |
api_1       | Node.js v18.8.0
api_1       | [nodemon] app crashed
api_1       | 
api_1       | > api@1.0.0 dev
api_1       | > nodemon --exitcrash index.mjs
api_1       |
api_1       | [nodemon] 2.0.15
api_1       | [nodemon] to restart at any time, enter `rs`
api_1       | [nodemon] watching path(s): *.*
api_1       | [nodemon] watching extensions: js,mjs,json
api_1       | [nodemon] starting `node index.mjs`
api_1       | Express web server is running at http://localhost:5000
api_1       | node:internal/process/promises:288
api_1       |             triggerUncaughtException(err, true /* fromPromise */);
api_1       |             ^
api_1       |
api_1       | Error: connect ECONNREFUSED 172.21.0.2:3306
api_1       |     at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1300:16) {
api_1       |   errno: -111,
api_1       |   code: 'ECONNREFUSED',
api_1       |   syscall: 'connect',
api_1       |   address: '172.21.0.2',
api_1       |   port: 3306,
api_1       |   fatal: true
api_1       | }
api_1       |
api_1       | Node.js v18.8.0
api_1       | [nodemon] app crashed
time-app_api_1 exited with code 1
mysql_1     | 2022-08-28T10:37:35.733925Z 6 [Warning] [MY-010453] [Server] root@localhost is created with an empty password ! Please consider switching off the --initialize-insecure option.
api_1       | 
api_1       | > api@1.0.0 dev
api_1       | > nodemon --exitcrash index.mjs
api_1       |
api_1       | [nodemon] 2.0.15
api_1       | [nodemon] to restart at any time, enter `rs`
api_1       | [nodemon] watching path(s): *.*
api_1       | [nodemon] watching extensions: js,mjs,json
api_1       | [nodemon] starting `node index.mjs`
api_1       | Express web server is running at http://localhost:5000
api_1       | node:internal/process/promises:288
api_1       |             triggerUncaughtException(err, true /* fromPromise */);
api_1       |             ^
api_1       |
api_1       | Error: connect ECONNREFUSED 172.21.0.2:3306
api_1       |     at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1300:16) {
api_1       |   errno: -111,
api_1       |   code: 'ECONNREFUSED',
api_1       |   syscall: 'connect',
api_1       |   address: '172.21.0.2',
api_1       |   port: 3306,
api_1       |   fatal: true
api_1       | }
api_1       |
api_1       | Node.js v18.8.0
api_1       | [nodemon] app crashed
time-app_api_1 exited with code 1
api_1       | 
api_1       | > api@1.0.0 dev
api_1       | > nodemon --exitcrash index.mjs
api_1       |
api_1       | [nodemon] 2.0.15
api_1       | [nodemon] to restart at any time, enter `rs`
api_1       | [nodemon] watching path(s): *.*
api_1       | [nodemon] watching extensions: js,mjs,json
api_1       | [nodemon] starting `node index.mjs`
api_1       | Express web server is running at http://localhost:5000
api_1       | node:internal/process/promises:288
api_1       |             triggerUncaughtException(err, true /* fromPromise */);
api_1       |             ^
api_1       |
api_1       | Error: connect ECONNREFUSED 172.21.0.2:3306
api_1       |     at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1300:16) {
api_1       |   errno: -111,
api_1       |   code: 'ECONNREFUSED',
api_1       |   syscall: 'connect',
api_1       |   address: '172.21.0.2',
api_1       |   fatal: true
api_1       | }
api_1       |
api_1       | Node.js v18.8.0
api_1       | [nodemon] app crashed
time-app_api_1 exited with code 1
Gracefully stopping... (press Ctrl+C again to force)
Stopping time-app_api_1      ... done
Stopping time-app_adminer_1  ... done
Stopping time-app_frontend_1 ... done
Stopping time-app_mysql_1    ... done
PS C:\work\docker\stashchuk\time-app> docker-compose down
Removing time-app_api_1      ... done
Removing time-app_adminer_1  ... done
Removing time-app_frontend_1 ... done
Removing time-app_mysql_1    ... done
Removing network time-app_default
PS C:\work\docker\stashchuk\time-app> 



Поменяли внешний порт на 3000, при отладке в том месте они должны быть одинаковые с внутренним. Можно было поменять внутренний.


PS C:\work\docker\stashchuk\time-app> docker-compose up --build
Creating network "time-app_default" with the default driver
Building frontend
[+] Building 4.4s (10/10) FINISHED
 => [internal] load build definition from Dockerfile                                                                                                    0.1s 
 => => transferring dockerfile: 32B                                                                                                                     0.0s 
 => [internal] load .dockerignore                                                                                                                       0.2s 
 => => transferring context: 2B                                                                                                                         0.0s 
 => [internal] load metadata for docker.io/library/node:alpine                                                                                          3.9s 
 => [internal] load build context                                                                                                                       0.1s 
 => => transferring context: 586B                                                                                                                       0.0s 
 => [1/5] FROM docker.io/library/node:alpine@sha256:9b435939937b0deef5c1f6fcfd1f265aa7a77574388b671fda322e662744472d                                    0.0s 
 => CACHED [2/5] WORKDIR /app                                                                                                                           0.0s 
 => CACHED [3/5] COPY package*.json ./                                                                                                                  0.0s 
 => CACHED [4/5] RUN npm install                                                                                                                        0.0s 
 => CACHED [5/5] COPY . .                                                                                                                               0.0s
 => exporting to image                                                                                                                                  0.1s 
 => => exporting layers                                                                                                                                 0.0s 
 => => writing image sha256:08d2b3029513361098e6fafc6b0a378a1257615b14a59502d9bcb18b20d4cb86                                                            0.0s 
 => => naming to docker.io/library/time-app_frontend                                                                                                    0.0s 

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
Building api
[+] Building 1.0s (10/10) FINISHED
 => [internal] load build definition from Dockerfile                                                                                                    0.1s 
 => => transferring dockerfile: 32B                                                                                                                     0.0s 
 => [internal] load .dockerignore                                                                                                                       0.1s 
 => => transferring context: 2B                                                                                                                         0.0s 
 => [internal] load metadata for docker.io/library/node:alpine                                                                                          0.6s 
 => [internal] load build context                                                                                                                       0.1s 
 => => transferring context: 296B                                                                                                                       0.0s 
 => [1/5] FROM docker.io/library/node:alpine@sha256:9b435939937b0deef5c1f6fcfd1f265aa7a77574388b671fda322e662744472d                                    0.0s
 => CACHED [2/5] WORKDIR /app                                                                                                                           0.0s 
 => CACHED [3/5] COPY package*.json ./                                                                                                                  0.0s
 => CACHED [4/5] RUN npm install                                                                                                                        0.0s 
 => CACHED [5/5] COPY . .                                                                                                                               0.0s
 => exporting to image                                                                                                                                  0.1s
 => => exporting layers                                                                                                                                 0.0s 
 => => writing image sha256:afd267e7e7f3a3d7e4b7ebe4dc6a32a19e0b03f2da366a7363dfc836ed7a4921                                                            0.0s 
 => => naming to docker.io/library/time-app_api                                                                                                         0.0s 

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
Creating time-app_adminer_1  ... done
Creating time-app_frontend_1 ... done
Creating time-app_mysql_1    ... done
Creating time-app_api_1      ... done
Attaching to time-app_mysql_1, time-app_frontend_1, time-app_adminer_1, time-app_api_1
adminer_1   | [Sun Aug 28 13:18:32 2022] PHP 7.4.30 Development Server (http://[::]:8080) started
frontend_1  |
frontend_1  | > vue-project@0.0.0 dev
frontend_1  | > vite --host
frontend_1  |
frontend_1  | Pre-bundling dependencies:
frontend_1  |   vue
frontend_1  |   @meforma/vue-toaster
frontend_1  |   moment
frontend_1  | (this will be run only when your dependencies or config have changed)
mysql_1     | 2022-08-28 13:18:31+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 8.0.30-1.el8 started.
mysql_1     | 2022-08-28 13:18:32+00:00 [Note] [Entrypoint]: Switching to dedicated user 'mysql'
mysql_1     | 2022-08-28 13:18:32+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 8.0.30-1.el8 started.
mysql_1     | 2022-08-28 13:18:32+00:00 [Note] [Entrypoint]: Initializing database files
mysql_1     | 2022-08-28T13:18:32.787171Z 0 [Warning] [MY-011068] [Server] The syntax '--skip-host-cache' is deprecated and will be removed in a future release. Please use SET GLOBAL host_cache_size=0 instead.
mysql_1     | 2022-08-28T13:18:32.787281Z 0 [System] [MY-013169] [Server] /usr/sbin/mysqld (mysqld 8.0.30) initializing of server in progress as process 81  
mysql_1     | 2022-08-28T13:18:32.811924Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.
frontend_1  | 
frontend_1  |   vite v2.7.13 dev server running at:
frontend_1  |
frontend_1  |   > Local:    http://localhost:3000/
frontend_1  |   > Network:  http://172.22.0.2:3000/
frontend_1  |
frontend_1  |   ready in 815ms.
frontend_1  |
api_1       | 
api_1       | > api@1.0.0 dev
api_1       | > nodemon --exitcrash index.mjs
api_1       |
api_1       | [nodemon] 2.0.15
api_1       | [nodemon] to restart at any time, enter `rs`
api_1       | [nodemon] watching path(s): *.*
api_1       | [nodemon] watching extensions: js,mjs,json
api_1       | [nodemon] starting `node index.mjs`
mysql_1     | 2022-08-28T13:18:35.169917Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.
api_1       | Express web server is running at http://localhost:5000
mysql_1     | 2022-08-28T1

==============================================

http://localhost:3000/

http://localhost:8888/
Login
System		MySQL
Server		mysql
Username	root
Password	password
Database	time_db





adminer_1   | [Sun Aug 28 13:28:30 2022] [::ffff:172.22.0.1]:58860 Accepted
adminer_1   | [Sun Aug 28 13:28:32 2022] [::ffff:172.22.0.1]:58860 [200]: GET /?server=mysql&username=root&db=time_db&select=times
adminer_1   | [Sun Aug 28 13:28:32 2022] [::ffff:172.22.0.1]:58860 Closing
Gracefully stopping... (press Ctrl+C again to force)
Stopping time-app_api_1      ... done
Stopping time-app_frontend_1 ... done
Stopping time-app_mysql_1    ... done
Stopping time-app_adminer_1  ... done
PS C:\work\docker\stashchuk\time-app> docker-compose down



PS C:\work\docker\stashchuk\time-app> docker-compose up        
Creating network "time-app_default" with the default driver
Creating time-app_frontend_1 ... done
Creating time-app_mysql_1    ... done
Creating time-app_adminer_1  ... done
Creating time-app_api_1      ... done
Attaching to time-app_mysql_1, time-app_frontend_1, time-app_adminer_1, time-app_api_1
adminer_1   | [Sun Aug 28 13:30:29 2022] PHP 7.4.30 Development Server (http://[::]:8080) started
frontend_1  |
frontend_1  | > vue-project@0.0.0 dev
frontend_1  | > vite --host
frontend_1  |
frontend_1  | Pre-bundling dependencies:
frontend_1  |   vue
frontend_1  |   @meforma/vue-toaster
frontend_1  |   moment
frontend_1  | (this will be run only when your dependencies or config have changed)
frontend_1  | 
frontend_1  |   vite v2.7.13 dev server running at:
frontend_1  |
frontend_1  |   > Local:    http://localhost:3000/
mysql_1     | 2022-08-28 13:30:28+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 8.0.30-1.el8 started.
mysql_1     | 2022-08-28 13:30:29+00:00 [Note] [Entrypoint]: Switching to dedicated user 'mysql'
mysql_1     | 2022-08-28 13:30:29+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 8.0.30-1.el8 started.
mysql_1     | 2022-08-28 13:30:29+00:00 [Note] [Entrypoint]: Initializing database files
mysql_1     | 2022-08-28T13:30:29.602634Z 0 [Warning] [MY-011068] [Server] The syntax '--skip-host-cache' is deprecated and will be removed in a future release. Please use SET GLOBAL host_cache_size=0 instead.
mysql_1     | 2022-08-28T13:30:29.602739Z 0 [System] [MY-013169] [Server] /usr/sbin/mysqld (mysqld 8.0.30) initializing of server in progress as process 80  
mysql_1     | 2022-08-28T13:30:29.644825Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.
frontend_1  |   > Network:  http://172.23.0.2:3000/
frontend_1  |
frontend_1  |   ready in 683ms.
frontend_1  |
api_1       | 
api_1       | > api@1.0.0 dev
api_1       | > nodemon --exitcrash index.mjs
api_1       |
api_1       | [nodemon] 2.0.15
api_1       | [nodemon] to restart at any time, enter `rs`
api_1       | [nodemon] watching path(s): *.*
api_1       | [nodemon] watching extensions: js,mjs,json
api_1       | [nodemon] starting `node index.mjs`
mysql_1     | 2022-08-28T13:30:32.135904Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.
adminer_1   | [Sun Aug 28 13:30:32 2022] [::ffff:172.23.0.1]:58886 Accepted
api_1       | Express web server is running at http://localhost:5000
api_1       | node:internal/process/promises:288
api_1       |             triggerUncaughtException(err, true /* fromPromise */);
api_1       |             ^
api_1       |
api_1       | Error: connect ECONNREFUSED 172.23.0.3:3306
api_1       |     at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1300:16) {
api_1       |   errno: -111,
api_1       |   code: 'ECONNREFUSED',
api_1       |   syscall: 'connect',
api_1       |   address: '172.23.0.3',
api_1       |   port: 3306,
api_1       |   fatal: true
api_1       | }
api_1       | 
api_1       | Node.js v18.8.0
api_1       | [nodemon] app crashed
api_1       | 
api_1       | > api@1.0.0 dev
api_1       | > nodemon --exitcrash index.mjs
api_1       |
api_1       | [nodemon] 2.0.15
api_1       | [nodemon] to restart at any time, enter `rs`
api_1       | [nodemon] watching path(s): *.*
api_1       | [nodemon] watching extensions: js,mjs,json
api_1       | [nodemon] starting `node index.mjs`
api_1       | Express web server is running at http://localhost:5000
mysql_1     | 2022-08-28T13:30:38.023225Z 6 [Warning] [MY-010453] [Server] root@localhost is created with an empty password ! Please consider switching off the --initialize-insecure option.





PS C:\work\docker\stashchuk\time-app> docker-compose up -d
Creating network "time-app_default" with the default driver
Creating volume "time-app_mysql_data" with default driver
Creating time-app_mysql_1    ... done
Creating time-app_frontend_1 ... done
Creating time-app_adminer_1  ... done
Creating time-app_api_1      ... done
PS C:\work\docker\stashchuk\time-app> 

PS C:\work\docker\stashchuk\time-app> docker-compose down
Stopping time-app_api_1      ... done
Stopping time-app_frontend_1 ... done
Stopping time-app_mysql_1    ... done
Stopping time-app_adminer_1  ... done
Removing time-app_api_1      ... done
Removing time-app_frontend_1 ... done
Removing time-app_mysql_1    ... done
Removing time-app_adminer_1  ... done
Removing network time-app_default
PS C:\work\docker\stashchuk\time-app> 


PS C:\work\docker\stashchuk\time-app> docker-compose up -d
Creating network "time-app_default" with the default driver
Creating time-app_mysql_1    ... done
Creating time-app_adminer_1  ... done
Creating time-app_frontend_1 ... done
Creating time-app_api_1      ... done
PS C:\work\docker\stashchuk\time-app> 



PS C:\work\docker\stashchuk\time-app> docker volume ls
DRIVER    VOLUME NAME
local     49f9d29974eea06dd55d233c4bbfc546e641aa2768c4d91e237b4ebdc0b612c2
local     58b2c4e1ecc6ca3591857119f1fa92a7f06ad6d43ad99d55c09997a663ba55a3
local     72c2a648857dbf28002807b4405c079736c73ec7744e52b99ee9b6e40da66d4d
local     091cc3ca0a9e2c93e784095b745ea567553516786575a46fabd23c91ff044eda
local     4887e1aafb9f5642dde7594534e24a3fe7227b7fa437483e8a71b5b047f76240
local     743742b2f63d3cec8772d8dff20d5208348611da79a7d313c3b18d13654dfa51
local     530314322c06150fbbf4ba89b8e94da2c4237492a142eeb24df2126113260148
local     c619d353ed51d6bb538959704dd1cf41ec577832254de940c0caf326acc9bbf6
local     e6df112056faca946a2a15e53af1693c3912e498b371c7220fecead4b8e8e20a
local     ec501d28301ac828bb2be710da24ccb1456c135b9f963380f15fefe2600cd1a9
local     time-app_mysql_data
PS C:\work\docker\stashchuk\time-app> 




PS C:\work\docker\stashchuk\time-app> docker inspect time-app_mysql_data
[
    {
        "CreatedAt": "2022-08-28T13:47:25Z",
        "Driver": "local",
        "Labels": {
            "com.docker.compose.project": "time-app",
            "com.docker.compose.version": "1.29.2",
            "com.docker.compose.volume": "mysql_data"
        },
        "Mountpoint": "/var/lib/docker/volumes/time-app_mysql_data/_data",
        "Name": "time-app_mysql_data",
        "Options": null,
        "Scope": "local"
    }
]
PS C:\work\docker\stashchuk\time-app> 



PS C:\work\docker\stashchuk\time-app> docker ps -a
CONTAINER ID   IMAGE               COMMAND                  CREATED          STATUS          PORTS                    NAMES
5932a99ddad9   time-app_api        "docker-entrypoint.s…"   14 minutes ago   Up 14 minutes   0.0.0.0:5555->5000/tcp   time-app_api_1
38f0b1881435   time-app_frontend   "docker-entrypoint.s…"   14 minutes ago   Up 14 minutes   0.0.0.0:3000->3000/tcp   time-app_frontend_1
1656b9b78ba1   mysql               "docker-entrypoint.s…"   14 minutes ago   Up 14 minutes   3306/tcp, 33060/tcp      time-app_mysql_1
7dc5101f25f5   adminer             "entrypoint.sh docke…"   14 minutes ago   Up 14 minutes   0.0.0.0:8888->8080/tcp   time-app_adminer_1
PS C:\work\docker\stashchuk\time-app> docker-compose down
Stopping time-app_api_1      ... done
Stopping time-app_frontend_1 ... done
Stopping time-app_mysql_1    ... done
Stopping time-app_adminer_1  ... done
Removing time-app_api_1      ... done
Removing time-app_frontend_1 ... done
Removing time-app_mysql_1    ... done
Removing time-app_adminer_1  ... done
Removing network time-app_default
PS C:\work\docker\stashchuk\time-app> 


(билдить не нужно, т.к. изменили только докер-композ.умл)

PS C:\work\docker\stashchuk\time-app> docker-compose up -d
Creating network "time-app_default" with the default driver
Creating time-app_adminer_1  ... done
Creating time-app_mysql_1    ... done
Creating time-app_frontend_1 ... done
Creating time-app_api_1      ... done
PS C:\work\docker\stashchuk\time-app> 





PS C:\work\docker\stashchuk> docker ps
CONTAINER ID   IMAGE               COMMAND                  CREATED         STATUS         PORTS                    NAMES
16e1fb540ce6   time-app_api        "docker-entrypoint.s…"   4 minutes ago   Up 4 minutes   0.0.0.0:5555->5000/tcp   time-app_api_1
b1e09b6400d7   time-app_frontend   "docker-entrypoint.s…"   4 minutes ago   Up 4 minutes   0.0.0.0:3000->3000/tcp   time-app_frontend_1
919b9c9d72e5   mysql               "docker-entrypoint.s…"   4 minutes ago   Up 4 minutes   3306/tcp, 33060/tcp      time-app_mysql_1
a9ca0d659616   adminer             "entrypoint.sh docke…"   4 minutes ago   Up 4 minutes   0.0.0.0:8888->8080/tcp   time-app_adminer_1
PS C:\work\docker\stashchuk> docker exec -it time-app_frontend_1 sh
/app # cd src
/app/src # cd components/
/app/src/components # cat Time.vue
<script>
import moment from 'moment'
import { startInterval, saveTime, deleteTime } from '../utils/time'

export default {
  props: {
    showSavedTimes: Boolean,
  },
  data() {
    return {
      currentTime: moment().format('HH:mm:ss'),
      savedTimes: [],
    }
  },
  methods: {
    startInterval,
    saveTime,
    deleteTime,
  },
  created: async function () {
    this.startInterval()
    const res = await fetch('http://localhost:5555/times')
    const json = await res.json()
    if (json.length) this.savedTimes = json
  },
}
</script>

<template>
  <div class="greetings">
    <h1 class="green">{{ currentTime }}</h1>
    <h3>Нажмите кнопку для сохранения в базе данных</h3>
    <button @click="saveTime">Сохранить текущее222выцыв время</button>
    <h3 v-if="savedTimes.length && showSavedTimes">
      Ранее сохраненные времена:
    </h3>
    <div
      v-if="showSavedTimes"
      class="deleted-items"
      v-for="savedTime in savedTimes"
      :key="savedTime.id"
    >
      <div class="deleted-item">{{ savedTime.time }}</div>
      <button class="btn-sm bg-red" @click="() => deleteTime(savedTime.id)">
        Удалить
      </button>
    </div>
  </div>
</template>

<style scoped>
h1 {
  font-weight: 500;
  font-size: 4rem;
  top: -10px;
}

h3 {
  font-size: 2rem;
}

button {
  font-size: 1.5rem;
  margin: 30px;
  background-color: rgb(128, 184, 244);
  border-radius: 5px;
  border: none;
  padding: 10px;
  cursor: pointer;
}

.btn-sm {
  margin: 10px;
  padding: 4px;
}

.bg-red {
  background-color: rgb(184, 93, 93);
}

.deleted-items {
  font-size: 1.7rem;
}

.deleted-item {
  width: 150px;
  display: inline-block;
}

.greetings {
  text-align: center;
}
</style>
/app/src/components # 




/app/node_modules # cd ..
/app # touch new-file.txt




PS C:\work\docker\stashchuk\time-app> docker logs time-app_frontend_1

> vue-project@0.0.0 dev
> vite --host

Pre-bundling dependencies:
  vue
  @meforma/vue-toaster
  moment
(this will be run only when your dependencies or config have changed)

  vite v2.7.13 dev server running at:

  > Local:    http://localhost:3000/
  > Network:  http://172.27.0.4:3000/

  ready in 978ms.



PS C:\work\docker\stashchuk\time-app> docker logs time-app_api_1     

> api@1.0.0 dev
> nodemon --exitcrash index.mjs




[nodemon] 2.0.15
[nodemon] to restart at any time, enter `rs`
[nodemon] watching path(s): *.*
[nodemon] watching extensions: js,mjs,json
[nodemon] starting `node index.mjs`
Express web server is running at http://localhost:5000
Connected to the MySQL DB - ID is 8
Times table was created
New time 18:13:23 was saved to the DB
New time 18:13:24 was saved to the DB
New time 18:15:30 was saved to the DB
PS C:\work\docker\stashchuk\time-app> 


Создаём образы для докер хаба


!!!  docker build -t serge163/time-app-frontend-dev .

PS C:\work\docker\stashchuk\time-app> cd .\frontend\
PS C:\work\docker\stashchuk\time-app\frontend> docker build -t serg163/time-app-frontend-dev .
[+] Building 4.6s (10/10) FINISHED
 => [internal] load build definition from Dockerfile                                                                                                                      0.1s 
 => => transferring dockerfile: 175B                                                                                                                                      0.0s 
 => [internal] load .dockerignore                                                                                                                                         0.1s 
 => => transferring context: 2B                                                                                                                                           0.0s 
 => [internal] load metadata for docker.io/library/node:alpine                                                                                                            4.0s 
 => [internal] load build context                                                                                                                                         0.1s 
 => => transferring context: 72.49kB                                                                                                                                      0.0s 
 => [1/5] FROM docker.io/library/node:alpine@sha256:9b435939937b0deef5c1f6fcfd1f265aa7a77574388b671fda322e662744472d                                                      0.0s 
 => CACHED [2/5] WORKDIR /app                                                                                                                                             0.0s 
 => CACHED [3/5] COPY package*.json ./                                                                                                                                    0.0s 
 => CACHED [4/5] RUN npm install                                                                                                                                          0.0s 
 => [5/5] COPY . .                                                                                                                                                        0.1s 
 => exporting to image                                                                                                                                                    0.2s 
 => => exporting layers                                                                                                                                                   0.1s 
 => => writing image sha256:fab8f04ac599d5af4b95f4dbbf40dab919f9a23afa94420df162ba6339752293                                                                              0.0s 
 => => naming to docker.io/serg163/time-app-frontend-dev                                                                                                                  0.0s 

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
PS C:\work\docker\stashchuk\time-app\frontend> 

PS C:\work\docker\stashchuk\time-app\frontend> docker login
Login with your Docker ID to push and pull images from Docker Hub. If you don't have a Docker ID, head over to https://hub.docker.com to create one.
Username: serge163
Password: 
Login Succeeded

Logging in with your password grants your terminal complete access to your account.
For better security, log in with a limited-privilege personal access token. Learn more at https://docs.docker.com/go/access-tokens/
PS C:\work\docker\stashchuk\time-app\frontend> 

PS C:\work\docker\stashchuk\time-app\frontend> docker images
REPOSITORY                      TAG       IMAGE ID       CREATED              SIZE
serg163/time-app-frontend-dev   latest    fab8f04ac599   About a minute ago   225MB
time-app_api                    latest    afd267e7e7f3   5 hours ago          177MB
time-app-backend                latest    620b3c4ad8d1   5 hours ago          177MB
time-app-frontend               latest    08d2b3029513   6 hours ago          225MB
time-app_frontend               latest    08d2b3029513   6 hours ago          225MB
docker-compose-app_app          latest    56b222bdec65   7 hours ago          61.6MB
my-file-writer                  latest    99972910552b   8 hours ago          167MB
my-calendar                     2.0.0     18bdfbad597a   8 hours ago          48.7MB
my-calendar                     latest    7bf2d11beeb4   9 hours ago          48.7MB
mysql                           latest    70325c69f1fe   41 hours ago         447MB
mongo                           latest    a3c1334134aa   2 days ago           693MB
nginx                           latest    2b7d6430f78d   5 days ago           142MB
adminer                         latest    75cd6c93316c   2 weeks ago          90.7MB
busybox                         latest    7a80323521cc   4 weeks ago          1.24MB
hello-world                     latest    feb5d9fea6a5   11 months ago        13.3kB
PS C:\work\docker\stashchuk\time-app\frontend> 


PS C:\work\docker\stashchuk\time-app\frontend> docker build -t serge163/time-app-frontend-dev .     
[+] Building 7.1s (11/11) FINISHED
 => [internal] load build definition from Dockerfile                                                                                                                      0.1s 
 => => transferring dockerfile: 32B                                                                                                                                       0.0s 
 => [internal] load .dockerignore                                                                                                                                         0.1s 
 => => transferring context: 2B                                                                                                                                           0.0s 
 => [internal] load metadata for docker.io/library/node:alpine                                                                                                            6.4s 
 => [auth] library/node:pull token for registry-1.docker.io                                                                                                               0.0s 
 => [1/5] FROM docker.io/library/node:alpine@sha256:9b435939937b0deef5c1f6fcfd1f265aa7a77574388b671fda322e662744472d                                                      0.0s 
 => [internal] load build context                                                                                                                                         0.1s 
 => => transferring context: 618B                                                                                                                                         0.0s 
 => CACHED [2/5] WORKDIR /app                                                                                                                                             0.0s 
 => CACHED [3/5] COPY package*.json ./                                                                                                                                    0.0s 
 => CACHED [4/5] RUN npm install                                                                                                                                          0.0s 
 => CACHED [5/5] COPY . .                                                                                                                                                 0.0s
 => exporting to image                                                                                                                                                    0.1s 
 => => exporting layers                                                                                                                                                   0.0s 
 => => writing image sha256:fab8f04ac599d5af4b95f4dbbf40dab919f9a23afa94420df162ba6339752293                                                                              0.0s 
 => => naming to docker.io/serge163/time-app-frontend-dev                                                                                                                 0.0s 

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
PS C:\work\docker\stashchuk\time-app\frontend> 


docker push serge163/time-app-frontend-dev



PS C:\work\docker\stashchuk\time-app\frontend> docker login 
Authenticating with existing credentials...
Login Succeeded

Logging in with your password grants your terminal complete access to your account.
For better security, log in with a limited-privilege personal access token. Learn more at https://docs.docker.com/go/access-tokens/
PS C:\work\docker\stashchuk\time-app\frontend> docker push serge163/time-app-frontend-dev
Using default tag: latest
The push refers to repository [docker.io/serge163/time-app-frontend-dev]
20b14af13420: Pushed
8d387d7a7da6: Pushed
31ca199f9fb4: Pushed
85613e3f7eec: Pushed
29ddfb506e6b: Pushed
1dd574bd2c87: Pushed
d101fffc6eaf: Pushed
994393dc58e7: Pushed
latest: digest: sha256:6dfb2d85c9cd3f6dcbb6dff8aae98dbfd08f0a3438988cd4cee4b1322cd3debc size: 1995
PS C:\work\docker\stashchuk\time-app\frontend> 

PS C:\work\docker\stashchuk\time-app\frontend> cd ../api
PS C:\work\docker\stashchuk\time-app\api> docker build -t serge163/time-app-api-dev .     
[+] Building 2.5s (11/11) FINISHED
 => [internal] load build definition from Dockerfile                                                                                                                      0.1s 
 => => transferring dockerfile: 175B                                                                                                                                      0.0s 
 => [internal] load .dockerignore                                                                                                                                         0.2s 
 => => transferring context: 2B                                                                                                                                           0.0s 
 => [internal] load metadata for docker.io/library/node:alpine                                                                                                            1.7s 
 => [auth] library/node:pull token for registry-1.docker.io                                                                                                               0.0s 
 => [internal] load build context                                                                                                                                         0.1s 
 => => transferring context: 126.92kB                                                                                                                                     0.0s 
 => [1/5] FROM docker.io/library/node:alpine@sha256:9b435939937b0deef5c1f6fcfd1f265aa7a77574388b671fda322e662744472d                                                      0.0s 
 => CACHED [2/5] WORKDIR /app                                                                                                                                             0.0s 
 => CACHED [3/5] COPY package*.json ./                                                                                                                                    0.0s 
 => CACHED [4/5] RUN npm install                                                                                                                                          0.0s 
 => [5/5] COPY . .                                                                                                                                                        0.1s 
 => exporting to image                                                                                                                                                    0.2s 
 => => exporting layers                                                                                                                                                   0.1s 
 => => writing image sha256:6936a22e9e84b01b9e98afbc3143c1c6cc286e68d60b40b5a15f22611bd4ea30                                                                              0.0s 
 => => naming to docker.io/serge163/time-app-api-dev                                                                                                                      0.0s 

Use 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them
PS C:\work\docker\stashchuk\time-app\api> 




PS C:\work\docker\stashchuk\time-app\api> docker push serge163/time-app-api-dev      
Using default tag: latest
The push refers to repository [docker.io/serge163/time-app-api-dev]
3af8d3ddddc1: Pushed
9eacdb689e46: Pushed
d8c299771b64: Pushed
85613e3f7eec: Mounted from serge163/time-app-frontend-dev
29ddfb506e6b: Mounted from serge163/time-app-frontend-dev
1dd574bd2c87: Mounted from serge163/time-app-frontend-dev
d101fffc6eaf: Mounted from serge163/time-app-frontend-dev
994393dc58e7: Mounted from serge163/time-app-frontend-dev
latest: digest: sha256:bc394858f6c1b610b9b84ef08d804024061d75063b2a70c3db9aaac3ee55d30b size: 1994
PS C:\work\docker\stashchuk\time-app\api> 



PS C:\work\docker\stashchuk\time-app\api> cd ..
PS C:\work\docker\stashchuk\time-app> ls 


    Каталог: C:\work\docker\stashchuk\time-app


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
d-----        28.08.2022     18:03                api
d-----        28.08.2022     18:21                frontend
-a----        28.08.2022     19:44            725 docker-compose pub.yml
-a----        28.08.2022     18:41            804 docker-compose.yml
-a----        26.01.2022     13:11            197 README.md


PS C:\work\docker\stashchuk\time-app>



PS C:\work\docker\stashchuk\time-app> docker-compose -f docker-compose.pub.yml up -d
Creating network "time-app_default" with the default driver
Creating volume "time-app_mysql_data_pub" with default driver
Creating time-app_mysql_1    ... done
Creating time-app_adminer_1  ... done
Creating time-app_frontend_1 ... done
Creating time-app_api_1      ... done
PS C:\work\docker\stashchuk\time-app> 

PS C:\work\docker\stashchuk\time-app> docker ps
CONTAINER ID   IMAGE                            COMMAND                  CREATED          STATUS          PORTS                    NAMES
8022f07a5a5e   serge163/time-app-api-dev        "docker-entrypoint.s…"   37 seconds ago   Up 34 seconds   0.0.0.0:5555->5000/tcp   time-app_api_1
226f7236eadf   adminer                          "entrypoint.sh docke…"   40 seconds ago   Up 36 seconds   0.0.0.0:8888->8080/tcp   time-app_adminer_1
02c4674ebb68   serge163/time-app-frontend-dev   "docker-entrypoint.s…"   40 seconds ago   Up 36 seconds   0.0.0.0:3000->3000/tcp   time-app_frontend_1
a8f2494bd730   mysql                            "docker-entrypoint.s…"   40 seconds ago   Up 36 seconds   3306/tcp, 33060/tcp      time-app_mysql_1
PS C:\work\docker\stashchuk\time-app> 



PS C:\work\docker\stashchuk\time-app> docker-compose down
Stopping time-app_api_1      ... done
Stopping time-app_adminer_1  ... done
Stopping time-app_frontend_1 ... done
Stopping time-app_mysql_1    ... done
Removing time-app_api_1      ... done
Removing time-app_adminer_1  ... done
Removing time-app_frontend_1 ... done
Removing time-app_mysql_1    ... done
Removing network time-app_default
PS C:\work\docker\stashchuk\time-app> 



docker-compose -f docker-compose.pub.yml down

docker image prune -a


PS C:\work\docker\stashchuk\time-app> docker image prune -a
WARNING! This will remove all images without at least one container associated to them.
Are you sure you want to continue? [y/N] y
Deleted Images:
untagged: time-app-backend:latest
deleted: sha256:620b3c4ad8d1fde269343e9e198151764173f548847b0041772cbbc64a9bea17
untagged: docker-compose-app_app:latest
deleted: sha256:56b222bdec6597f8919e9cdab1b37602a41f7e247e35dcb1c0532277b52e208f
untagged: time-app-frontend:latest
untagged: time-app_frontend:latest
deleted: sha256:08d2b3029513361098e6fafc6b0a378a1257615b14a59502d9bcb18b20d4cb86
untagged: my-calendar:2.0.0
deleted: sha256:18bdfbad597ad8db64e0db0343b48e406b31c328ee1295935f1bc2a2957ad1c0
untagged: serge163/time-app-frontend-dev:latest
untagged: serge163/time-app-frontend-dev@sha256:6dfb2d85c9cd3f6dcbb6dff8aae98dbfd08f0a3438988cd4cee4b1322cd3debc
deleted: sha256:fab8f04ac599d5af4b95f4dbbf40dab919f9a23afa94420df162ba6339752293
untagged: adminer:latest
untagged: adminer@sha256:ffef52f1cdc49e9877f8e73b62afe358396241fd3d018dd6e55bc865c2d58c87
deleted: sha256:75cd6c93316cb33fc0e5264a601cd3a30e3c869aeff375eab6b38679285f40cd
deleted: sha256:7b3d620d08107676c5640a6964752bba44299ba77c50b673747f91f3ce7f88ba
deleted: sha256:f53a677b6a7533810a3fb3e94b661bc239f67fbac6dd5a40cb6bd3c77fb19a9a
deleted: sha256:b93d0072d63fdbfc70841db86c12a0f77418bb293334400716579cf5055812d6
deleted: sha256:37a6422fc5e3bd50f1625eaa048c16051c3d5b8984e2aec0929e6d72ea38b0dc
deleted: sha256:8bf2931348bbd5bf0f3afdad38f4f9b7ef957ebde47d00977a30c8e442d08332
deleted: sha256:7bc582f5a61b039cbbb7498c65f976f530b2c6c297a862aa5f4f8e9a8276daea
deleted: sha256:c49516505000842d0ce4d498530ee8f1f3b92fb3682b297b4f808233256e7808
deleted: sha256:6ed8c1c3284ec56097193faba66febb808fb4a20e47ca3fdc8a3eb3b98c8eaf6
deleted: sha256:c9f2b8fa8256307a9a1dacbf260079f3ef002b677812aad937b5bccc2603b190
deleted: sha256:7df4f1dbcc4130154e7d2e77f421158a753cacb4bca4da581c8707f5a7dacaad
deleted: sha256:f4ccfc0e21e36cb2c66d5a7715611457e4977d31be276fae849bcfc46b06f160
deleted: sha256:f5b97eb0be757e94ff93f08b05de6377a85c561e286bc6dfeb96364292f21d17
deleted: sha256:33fdec57bcfa64d807c9bc1db6c7d1234ca869a263d194fb4dbf09560703f1fb
deleted: sha256:8fb3c1d556d338fe231e58283f7ebb326beaff4bc40c69a5de2c86ce6d8db8d4
untagged: time-app_api:latest
deleted: sha256:afd267e7e7f3a3d7e4b7ebe4dc6a32a19e0b03f2da366a7363dfc836ed7a4921
untagged: serge163/time-app-api-dev:latest
untagged: serge163/time-app-api-dev@sha256:bc394858f6c1b610b9b84ef08d804024061d75063b2a70c3db9aaac3ee55d30b
deleted: sha256:6936a22e9e84b01b9e98afbc3143c1c6cc286e68d60b40b5a15f22611bd4ea30
untagged: my-calendar:latest
deleted: sha256:7bf2d11beeb48d0bcbc715a6d0336259b8a5587eae9522235ea988c045b0bef0
untagged: hello-world:latest
untagged: hello-world@sha256:7d246653d0511db2a6b2e0436cfd0e52ac8c066000264b3ce63331ac66dca625
deleted: sha256:feb5d9fea6a5e9606aa995e879d862b825965ba48de054caab5ef356dc6b3412
deleted: sha256:e07ee1baac5fae6a26f30cabfe54a36d3402f96afda318fe0a96cec4ca393359
untagged: mongo:latest
untagged: mongo@sha256:3f5930850894e023a36a670412445991dbe814c6fc356155ba933137c37e9a42
deleted: sha256:a3c1334134aafd75500fbfe5cddbc0bde4d628725cb074bf988edbbad2cf0acc
deleted: sha256:2d79d6fc691c44129141c8863c01ce1bf746ea367b343d0aaa8be14e5be99d68
deleted: sha256:357921b9d688f180a1dd5529de5c169955491e7601d1ad4d4a4c4aff5c0cc655
deleted: sha256:18c95144f5a9599401c65a02ef46d3ac0f92cee4ddc81b251ba68378b5fd6f6d
deleted: sha256:7c45a582ed87bc6c3ca78fdb945b1d385d454a25617a66a7d509075e106552de
deleted: sha256:25588f2211395a78255960bd1cfa8348c6508428c3a1c6bfc28fe186b0848178
deleted: sha256:27ab36c3e7a244e542f9e4a93f1b98f7efb2df87add36eed1d1a22cb91fe84d8
deleted: sha256:965aa76580854c822d7706c962534661dd358834c3f1e8de407a062666a92cff
deleted: sha256:44e14fe64ec5c2ed0df6f4258727b3b34b916238f7dbec2f741e2b30f9c00f84
deleted: sha256:c3f11d77a5de76ec836c52333d45ac3742c7b27d3d83feba6ec978e223715c67
untagged: my-file-writer:latest
deleted: sha256:99972910552b9ae10b6fae5b03ee1522035e3b9f23295e3538d72518d793efe2
untagged: busybox:latest
untagged: busybox@sha256:ef320ff10026a50cf5f0213d35537ce0041ac1d96e9b7800bafd8bc9eff6c693
deleted: sha256:7a80323521ccd4c2b4b423fa6e38e5cea156600f40cd855e464cc52a321a24dd
deleted: sha256:084326605ab6715ca698453e530e4d0319d4e402b468894a06affef944b4ef04
untagged: mysql:latest
untagged: mysql@sha256:00f8c8d24e53810771fcb9e8dc8cdff3bd11ef8cddbf13f4e1443a027c5bf617
deleted: sha256:70325c69f1fe76e7f4e62e62fb5ef4e76acb45935075cec7b4cb42a928fef78a
deleted: sha256:05616fc82519a35896155ad6bec239d8fcd412bb30cad4323ac9dc575abfd401
deleted: sha256:e43d652b99cc0d091bf51de50449b8d3077d6e2f2c0f3833f546305d02afb340
deleted: sha256:60c394d811ee737c80fa3b82a47b2a63320aa5645d30f80e5bc1a70cb36c2e66
deleted: sha256:8daf45fd8c2db14031ed62ccaccc842e54cbc85bf4b804ca18c1b61705583027
deleted: sha256:f6e021ec28c2c71592eb287930d90ce14d10f9f8b36cdb2fb089daabecb0b5e4
deleted: sha256:1cc73625395ce10dd6467207681629cacc7c570400427665bbbd3447b85c6ced
deleted: sha256:ccb67921ba8341566c68b77c2c1a51d8ddf36fb62d8b25006b59fb861d8036cf
deleted: sha256:bd99ddaa6914e6c8d65ca17eaf8102bd1a08b4679e76466dc858468341e66bcd
deleted: sha256:9c3ca9c3b396cd8fc7b9d8c583ca287fa4077304c87a86fb2bf5de4efc6b1396
deleted: sha256:b2eff611abe8bc0fdfa67a7a8d9cae03e7f0121a83d93c5df5751bcb94ea22c3
deleted: sha256:e561c2529e3af7890148dbb23bae0591aee79815cc6aa1f21cb09d01656df23b
untagged: nginx:latest
untagged: nginx@sha256:b95a99feebf7797479e0c5eb5ec0bdfa5d9f504bc94da550c2f58e839ea6914f
deleted: sha256:2b7d6430f78d432f89109b29d88d4c36c868cdbf15dc31d2132ceaa02b993763
deleted: sha256:83cfe7b2ae78dff709b878ea6827c2b7447910f22f5c18d2155bc4ee678b6589
deleted: sha256:8354a3628193232756e7e39423937a89bdea9738fcd033e3009c34847d44f1cc
deleted: sha256:edd004a0175251a1fa027a4949079439eb989b9c9d0dc863c2c834e0da69ed2e
deleted: sha256:e65b26350d575233ec4815a0ced147030bb9db419084e6a1561aab8c9f05f20e
deleted: sha256:d75805fc21788b744c171b7ca303a153b34b61b61401c74348b0a16c9bfabbc8
deleted: sha256:6485bed636274e42b47028c43ad5f9c036dd7cf2b40194bd556ddad2a98eea63

Total reclaimed space: 1.368GB
PS C:\work\docker\stashchuk\time-app> 


PS C:\work\docker\stashchuk\time-app> docker images
REPOSITORY   TAG       IMAGE ID   CREATED   SIZE
PS C:\work\docker\stashchuk\time-app> 




PS C:\work\docker\stashchuk\time-app> docker-compose -f docker-compose.pub.yml up -d
Creating network "time-app_default" with the default driver
Pulling frontend (serge163/time-app-frontend-dev:)...
latest: Pulling from serge163/time-app-frontend-dev
213ec9aee27d: Already exists
f65aa18165db: Already exists
028cf1f44ab1: Already exists
fd0328f6bdba: Already exists
8617b517c14c: Already exists
a7e50add0b23: Already exists
db504e22da68: Already exists
5f0656b7237f: Already exists
Digest: sha256:6dfb2d85c9cd3f6dcbb6dff8aae98dbfd08f0a3438988cd4cee4b1322cd3debc
Status: Downloaded newer image for serge163/time-app-frontend-dev:latest
Pulling mysql (mysql:)...
latest: Pulling from library/mysql
ee4ca39e1b6e: Pull complete
55731ee5cc27: Pull complete
f3fd4ba8837d: Pull complete
dfdb35add3bd: Pull complete
cb34f3e592a8: Pull complete
961390a73dd2: Pull complete
338d4f22364b: Pull complete
633ee7c98915: Pull complete
961374a411ee: Pull complete
da93a12a127a: Pull complete
6931149ad6ae: Pull complete
Digest: sha256:00f8c8d24e53810771fcb9e8dc8cdff3bd11ef8cddbf13f4e1443a027c5bf617
Status: Downloaded newer image for mysql:latest
Pulling api (serge163/time-app-api-dev:)...
latest: Pulling from serge163/time-app-api-dev
213ec9aee27d: Already exists
f65aa18165db: Already exists
028cf1f44ab1: Already exists
fd0328f6bdba: Already exists
8617b517c14c: Already exists
466596b2d269: Already exists
9606eb0071d0: Already exists
5d9cbbd59e53: Already exists
Digest: sha256:bc394858f6c1b610b9b84ef08d804024061d75063b2a70c3db9aaac3ee55d30b
Status: Downloaded newer image for serge163/time-app-api-dev:latest
Pulling adminer (adminer:)...
latest: Pulling from library/adminer
213ec9aee27d: Already exists
a600fdbc30cc: Pulling fs layer
0cdd6cb15c0d: Pulling fs layer
8a4c40d8aee7: Pull complete
77e67522f4fd: Pull complete
d181492ef8e9: Pull complete
0d5c09a73378: Pull complete
8bb8e21282b9: Pull complete
fdd7ab990e10: Pull complete
d59940a6c65c: Pull complete
8af31b44c60c: Pull complete
8f57d1664c2a: Pull complete
eafa31c9e999: Pull complete
d99ebf4176fd: Pull complete
dd175257ae8d: Pull complete
Digest: sha256:ffef52f1cdc49e9877f8e73b62afe358396241fd3d018dd6e55bc865c2d58c87
Status: Downloaded newer image for adminer:latest
Creating time-app_adminer_1  ... done
Creating time-app_frontend_1 ... done
Creating time-app_mysql_1    ... done
Creating time-app_api_1      ... done
PS C:\work\docker\stashchuk\time-app> 




